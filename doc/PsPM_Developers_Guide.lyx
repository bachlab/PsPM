#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{0.53, 0.66, 0.42}
\definecolor{colString}{rgb}{0.87, 0.36, 0.51}
\definecolor{barColor}{rgb}{0.43, 0.5, 0.5}
% Added by lyx2lyx
\renewcommand{\textendash}{--}
\renewcommand{\textemdash}{---}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "language=Matlab,float=hbp,basicstyle={\footnotesize\ttfamily},identifierstyle={\color{colIdentifier}},keywordstyle={\color{colKeys}},stringstyle={\color{colString}},commentstyle={\itshape\color{colComments}},columns=fixed,tabsize=2,extendedchars=true,showspaces=false,showstringspaces=false,captionpos=t,backgroundcolor={\color{white}},framexleftmargin=1pt,frame=l"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
PsPM: Psychophysiological Modelling
\end_layout

\begin_layout Title
Developer's Guide
\end_layout

\begin_layout Standard
\align center
Version 5.1.0
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align center
by the PsPM team
\begin_inset Foot
status open

\begin_layout Plain Layout
\noindent
If you have comments on or error corrections to this documentation, please
 send them to the PsPM team or post them on: 
\begin_inset CommandInset href
LatexCommand href
name "bachlab.org/pspm"
target "http://bachlab.org/pspm"
literal "false"

\end_inset


\end_layout

\end_inset


\size larger
:
\end_layout

\begin_layout Standard
\align center
Dominik R Bach, Giuseppe Castegnetti, Laure Ciernik, Samuel Gerster, Saurabh
 Khemka, Christoph Korn, Samuel Maxwell, Tobias Moser, Philipp C Paulus,
 Ivan Rojkov, Matthias Staib, Eshref Yozdemir, Dadi Zhao and collaborators
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
General
\end_layout

\begin_layout Subsection
Data files: General structure 
\end_layout

\begin_layout Standard
In PsPM the data is saved in mat-files.
 Each file contains two variables: 
\end_layout

\begin_layout Itemize

\family typewriter
infos
\family default
 A struct variable with general infos 
\end_layout

\begin_layout Itemize

\family typewriter
data
\family default
 A cell array with a cell for each channel.
 
\end_layout

\begin_layout Standard
The cells contain a struct with channel specific infos and data.
 The structs have the mandatory fields: 
\end_layout

\begin_layout Itemize

\family typewriter
infos.duration
\family default
 (in seconds)
\end_layout

\begin_layout Itemize

\family typewriter
data{n}.header
\family default
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
data{n}.header.chantype
\family default
 (as defined in the settings) 
\end_layout

\begin_layout Itemize

\family typewriter
data{n}.header.sr
\family default
 (sample rate in 1/second, or timestamp units in seconds) 
\end_layout

\begin_layout Itemize

\family typewriter
data{n}.header.units
\family default
 (data units, or ‘events’) 
\end_layout

\begin_layout Itemize

\family typewriter
data{n}.data
\family default
 (actual data) 
\end_layout

\end_deeper
\begin_layout Standard
Additionally, a typical file contains the optional infos: 
\end_layout

\begin_layout Itemize

\family typewriter
infos.sourcefile 
\end_layout

\begin_layout Itemize

\family typewriter
infos.importfile 
\end_layout

\begin_layout Itemize

\family typewriter
infos.importdate 
\end_layout

\begin_layout Itemize

\family typewriter
infos.sourcetype 
\end_layout

\begin_layout Itemize

\family typewriter
infos.recdate 
\end_layout

\begin_layout Itemize

\family typewriter
infos.rectime 
\end_layout

\begin_layout Standard
Some data manipulation functions (in particular, pspm_trim) update infos
 to record some file history.
 
\end_layout

\begin_layout Subsection
How to add a new import data type
\end_layout

\begin_layout Subsubsection
Add function
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent
\align block
Function name: pspm_get_xxx (where xxx is the data type name).
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Format: 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent
\align block

\family typewriter
[sts, import, sourceinfo] = pspm_get_xxx(datafile, import)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\family default
The function needs to take an import job and add, for each job, fields 
\end_layout

\begin_layout Itemize
\noindent
\align block
.data - the actual data for this channel (column vector) 
\end_layout

\begin_layout Itemize
\noindent
\align block
.sr - the sample rate for this channel (only if .autosr enabled in pspm_init)
 
\end_layout

\begin_layout Standard
\noindent
\align block
optional fields 
\end_layout

\begin_layout Itemize
\noindent
\align block
.marker - for marker channels (timestamps or continuous, see pspm_get_marker)
 
\end_layout

\begin_layout Itemize
\noindent
\align block
.markerinfo – optional, see pspm_get_marker 
\end_layout

\begin_layout Itemize
\noindent
\align block
.minfreq - minimum frequency for pulse channels 
\end_layout

\begin_layout Itemize
\noindent
\align block
.units - if data units are defined by the recording software 
\end_layout

\begin_layout Itemize
\noindent
\align block
sts: -1 if import is unsuccessful 
\end_layout

\begin_layout Standard
\noindent
\align block
sourceinfo: contains information on the source file, with field 
\end_layout

\begin_layout Itemize
\noindent
\align block
.chan - a cell of string descriptions of the imported source channels, e.
 g.
 names, or numbers any optional fields that will be added to infos.source
 (e.
 g.
 recording date & time, and others)
\family typewriter
 
\end_layout

\begin_layout Standard
Notes for multiple blocks: file formats that support multiple block storage
 within one file can return cell arrays import{1:blkno} and sourceinfo{1:blkno};
 PsPM will save individual files for each block, with a filename 'pspm_fn_blk0x.m
at'.
\end_layout

\begin_layout Subsubsection
Add information to settings
\end_layout

\begin_layout Standard
The file pspm_init contains a block that defines possible import data types.
 Add a new field here
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\noindent

\family typewriter
\begin_inset listings
inline false
status open

\begin_layout Plain Layout
\noindent

% Description of data type 
\end_layout

\begin_layout Plain Layout
\noindent

% --------------------------------------------- 
\end_layout

\begin_layout Plain Layout
\noindent

defaults.import.datatypes(1) = ...
 
\end_layout

\begin_layout Plain Layout
\noindent

struct('short', 'xxx', ...
 % short name for internal purposes 
\end_layout

\begin_layout Plain Layout

'long', 'Datatype description', ...
 % long name for GUI 
\end_layout

\begin_layout Plain Layout

'ext', '*', ...
 % data file extension 
\end_layout

\begin_layout Plain Layout

'funct', @pspm_get_xxx, ...
 % import function 
\end_layout

\begin_layout Plain Layout

'chantypes', {{defaults.chantypes.type}}, ...
 % allowed channel types 
\end_layout

\begin_layout Plain Layout

'chandescription', 'channel', ...
 % description of channels for GUI 
\end_layout

\begin_layout Plain Layout

'multioption', 1, ...
 % import of multiple channels for GUI 
\end_layout

\begin_layout Plain Layout

'searchoption', 1, ...
 % allow channel name search for GUI 
\end_layout

\begin_layout Plain Layout

'automarker', 0, ...
 % marker not stored in separate channel 
\end_layout

\begin_layout Plain Layout

'autosr', 1); % sample rate automatically assigned
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Good to know: 
\end_layout

\begin_layout Itemize
the “long” definition is used in the GUI – make sure it’s readable 
\end_layout

\begin_layout Itemize
if no event channels can be imported, change .chantypes 
\end_layout

\begin_layout Itemize
if channels have searchable names in the import file, set .searchoption =
 1
\end_layout

\begin_layout Itemize
if no channel number needs to be assigned for the marker channel, set .automarker
 = 1
\end_layout

\begin_layout Itemize
if sample rate is contained in import file and determined during import,
 set .autosr = 1
\end_layout

\begin_layout Itemize
if you need external functions – put them into a folder in the ‘import’
 subdirectory and add/remove this path within the pspm_get_xxx function
\end_layout

\begin_layout Subsection
How to add a new channel type
\end_layout

\begin_layout Subsubsection
Add function
\end_layout

\begin_layout Standard
Function name: pspm_get_xxx (where xxx is the channel type)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Format:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\family typewriter
[sts, data] = pspm_get_channeltype(import)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\family default
data: data cell of structure readable by pspm_load_data 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Good to know: for event channels, use the function pspm_get_events to convert
 various event formats into time stamps (see pspm_get_marker or pspm_get_hb
 as an example) 
\end_layout

\begin_layout Subsubsection
Add information to settings
\end_layout

\begin_layout Standard
Add information on the new channel type and import function to
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\family typewriter

\begin_inset listings
inline false
status open

\begin_layout Plain Layout

defaults.chantypes(k).type = 'xxx';% channel type name 
\end_layout

\begin_layout Plain Layout

defaults.chantypes(k).import = @pspm_get_xxx; % conversion function
\end_layout

\begin_layout Plain Layout

defaults.chantypes(k).data = 'xxx'; % ’wave’ or ’events’ 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
How to add a new GLM type
\end_layout

\begin_layout Subsubsection
Add information to settings (Example SCR)
\end_layout

\begin_layout Standard

\family typewriter
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

defaults.glm(1) = ...
 
\end_layout

\begin_layout Plain Layout

struct('modality', 'scr', ...
 % modality name 
\end_layout

\begin_layout Plain Layout

'cbf', struct('fhandle', @pspm_bf_scrf, 'args', 1), ...
 
\end_layout

\begin_layout Plain Layout

% default basis function/set
\end_layout

\begin_layout Plain Layout

'filter', struct('lpfreq', 5, 'lporder', 1, ...
 
\end_layout

\begin_layout Plain Layout

'hpfreq', 0.05, 'hporder', 1, 'down', 10, 'direction', 'uni')); 
\end_layout

\begin_layout Plain Layout

% default filter settings 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Add default basis function
\end_layout

\begin_layout Standard
Function name: pspm_bf_xxx 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Function arguments: vector of arguments, first element is time resolution,
 further arguments as defined in defaults.glm(n).cbf.args 
\end_layout

\begin_layout Subsection
Warning IDs in PsPM
\end_layout

\begin_layout Subsubsection
General
\end_layout

\begin_layout Itemize
invalid_input
\end_layout

\begin_layout Itemize
invalid_channeltype
\end_layout

\begin_layout Itemize
nonexistent_file
\end_layout

\begin_layout Itemize
channel_not_contained_in_file
\end_layout

\begin_layout Itemize
obsolete_function
\end_layout

\begin_layout Itemize
not_allowed_channeltype
\end_layout

\begin_layout Itemize
invalid_data_structure
\end_layout

\begin_layout Itemize
no_matching_channels
\end_layout

\begin_layout Itemize
unknown_action
\end_layout

\begin_layout Itemize
missing_data
\end_layout

\begin_layout Itemize
out_of_range
\end_layout

\begin_layout Subsubsection
Function specific
\end_layout

\begin_layout Standard
pspm_load1
\end_layout

\begin_layout Itemize
not_saving_data
\end_layout

\begin_layout Standard
pspm_interpolate
\end_layout

\begin_layout Itemize
option_disabled
\end_layout

\begin_layout Standard
pspm_trim
\end_layout

\begin_layout Itemize
marker_out_of_range
\end_layout

\begin_layout Standard
pspm_find_channel
\end_layout

\begin_layout Itemize
multiple_matching_channels
\end_layout

\begin_layout Standard
pspm_find_sounds
\end_layout

\begin_layout Itemize
no_marker_chan
\end_layout

\begin_layout Itemize
no_sound_chan
\end_layout

\begin_layout Standard
pspm_get_scr
\end_layout

\begin_layout Itemize
no_conversion_constant
\end_layout

\begin_layout Standard
pspm_pp
\end_layout

\begin_layout Itemize
invalid_freq
\end_layout

\begin_layout Standard
pspm_prepdata
\end_layout

\begin_layout Itemize
no_low_pass_filtering
\end_layout

\begin_layout Itemize
downsampling_failed
\end_layout

\begin_layout Itemize
nonint_sr 
\end_layout

\begin_layout Standard
pspm_get_timing
\end_layout

\begin_layout Itemize
invalid_vector_size
\end_layout

\begin_layout Itemize
event_names_dont_match
\end_layout

\begin_layout Itemize
no_numeric_vector
\end_layout

\begin_layout Itemize
no_integers 
\end_layout

\begin_layout Standard
pspm_down
\end_layout

\begin_layout Itemize
rate_below_minimum
\end_layout

\begin_layout Section
List of data formats
\end_layout

\begin_layout Subsection
Supported Channel types
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="22" columns="13">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="3.6cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SCR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ECG
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Heart Rate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Heart Beat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Heart Period
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Respiration
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pupil Size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Marker
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Custom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sound channel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pulse oxymeter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gaze x/y, l/r
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CED Spike
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Matlab
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Text
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Biopach AcqKnowledge (
\begin_inset Formula $\leq$
\end_inset

 v3.9.0)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Biopac AcqKnowledge (exported)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Labchart (any Version, Windows only)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Labchart exported 
\end_layout

\begin_layout Plain Layout
(
\begin_inset Formula $\leq$
\end_inset

 v7.1)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Labchart exported 
\end_layout

\begin_layout Plain Layout
(
\begin_inset Formula $\geq$
\end_inset

 v7.2)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VarioPort
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Biograph Infiniti (exported)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mindmedia Biotrace (exported)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Brain Vision
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Windaq (wdq)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observer XT compatible
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NeuroScan
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
BioSemi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eyelink
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
European Data Format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Philips Scanphyslog
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SMI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ViewPoint
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Further settings
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="22" columns="8">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="3.6cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="2.2cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Datatype
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
File extension
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manufacturer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Import multiple channels
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Search channel names
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Automarker
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ask for sampling rate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CED Spike
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spike
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.smr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Matlab
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.mat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Text
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Biopach AcqKnowledge (
\begin_inset Formula $\leq$
\end_inset

 v3.9.0)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
acq
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.acq
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Biopac
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Biopac AcqKnowledge (exported)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
acqmat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.mat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Biopac
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Labchart (any Version, Windows only)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
labchart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.adicht
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADInstruments
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Labchart exported 
\end_layout

\begin_layout Plain Layout
(
\begin_inset Formula $\leq$
\end_inset

 v7.1)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
labchartmat_ext
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.mat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADInstruments
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Labchart exported 
\end_layout

\begin_layout Plain Layout
(
\begin_inset Formula $\geq$
\end_inset

 v7.2)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
labchartmat_in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.mat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADInstruments
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VarioPort
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vario
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.vpd
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Becker MediTec
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Biograph Infiniti (exported)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
biograph
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Thought Technology
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mindmedia Biotrace (exported)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
biotrace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MindMedia
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Brain Vision
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
brainvision
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.eeg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
BrainProducts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Windaq (wdq)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
windaq
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.wdq
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dataq
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observer XT compatible
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
observer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Noldus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NeuroScan
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cnt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.cnt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
BioSemi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
biosemi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.bdf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eyelink
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.asc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
European Data Format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
edf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.edf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
European Data Format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Philips Scanphyslog
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.log
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Philips
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SMI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SensoMotoric Instruments
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ViewPoint
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arrington Research
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
✓
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Note: Automarkers means no channel number has to be specified because markers
 are always at the same place.
\end_layout

\begin_layout Section
GUI
\end_layout

\begin_layout Standard

\shape italic
Contributed by Gabriel Gräni.
\end_layout

\begin_layout Subsection
Matlabbatch: Getting started
\end_layout

\begin_layout Enumerate
Add the trunk folder to the matlab path
\end_layout

\begin_layout Enumerate
Type pspm_init into the command window (after the execution of the command
 the folders pspm_cfg and matlabbatch should be added to the matlab path)
\end_layout

\begin_layout Enumerate
Start matlabbatch by the typing cfg_ui into the command window
\end_layout

\begin_layout Enumerate
If the item PsPM exists in the menu bar of matlabbatch you can skip steps
 5 to 7 and continue at step 8
\end_layout

\begin_layout Enumerate
Select –> File –> Add Application
\end_layout

\begin_layout Enumerate
Navigate to the folder pspm_cfg on the left hand side of the window and
 select the file pspm_cfg.m on the right hand side –> Press the button Done
\end_layout

\begin_layout Enumerate
A new item, called PsPM, will appear in the upper menu bar.
\end_layout

\begin_layout Enumerate
By selecting PsPM the desired action can be selected (at the moment, there
 is only Data Preparation –> {Import, Trim} available) 
\end_layout

\begin_layout Subsubsection
Example Function: Trim
\end_layout

\begin_layout Standard
This example demonstrates how matlabbatch can be used to execute a function.
 For all other functions matlabbatch behaves in the same manner.
\end_layout

\begin_layout Itemize
Select a file by pressing the Select Files Button (under Datafile)
\end_layout

\begin_layout Itemize
Select Reference and choose an item in the lower part of the window
\end_layout

\begin_layout Itemize
Fill in the desired values in the fields which are marked with "<-X"
\end_layout

\begin_layout Itemize
After you have chosen a file and filled in all values correctly, you will
 see a green arrow on the upper left part of the window
\end_layout

\begin_layout Itemize
By pressing on the green arrow the selected file will be trimmed according
 to the filled in values 
\end_layout

\begin_layout Subsection
Matlabbatch: How to
\end_layout

\begin_layout Subsubsection
Preliminaries
\end_layout

\begin_layout Itemize
Add folder of matlabbatch to the matlab path
\end_layout

\begin_layout Itemize
Add first application and then load the batch in order to execute a function
 
\end_layout

\begin_layout Subsubsection
Some notes for creating a new application
\end_layout

\begin_layout Itemize
Leafs (items) are specified first
\end_layout

\begin_layout Itemize
Assigning child items to .val or .values fields of their parent items
\end_layout

\begin_layout Itemize
Root node of a tree is specified last
\end_layout

\begin_layout Itemize
Some examples of items: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
cfg_item: 
\begin_inset Newline newline
\end_inset


\family typewriter

\begin_inset listings
inline false
status open

\begin_layout Plain Layout

item1= cfg_item; % Defines generic configuration item 
\end_layout

\begin_layout Plain Layout

item1.name= 'Def 1'; % The display name 
\end_layout

\begin_layout Plain Layout

item1.tag = 'def1'; % The name appearing in the harvested job 
\end_layout

\begin_layout Plain Layout

% structure.
 This name must be unique 
\end_layout

\begin_layout Plain Layout

% among all items in the val field of the 
\end_layout

\begin_layout Plain Layout

% superior node 
\end_layout

\begin_layout Plain Layout

item1.val = {true}; % Value of item (optional) 
\end_layout

\begin_layout Plain Layout

item1.help = {'Help...'}; % Help text 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
cfg_entry: 
\begin_inset Newline newline
\end_inset


\family typewriter

\begin_inset listings
inline false
status open

\begin_layout Plain Layout

entry1 = cfg_entry; % Defines entry configuration item 
\end_layout

\begin_layout Plain Layout

entry1.name = 'Input'; 
\end_layout

\begin_layout Plain Layout

entry1.tag = 'input'; 
\end_layout

\begin_layout Plain Layout

entry1.strtye = 'r'; % Type of values which can be entered 
\end_layout

\begin_layout Plain Layout

entry1.num = [1 1]; % Expected dimension of the input 
\end_layout

\begin_layout Plain Layout

entry1.help = {'Help...'}; 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
cfg_choice: 
\begin_inset Newline newline
\end_inset


\family typewriter

\begin_inset listings
inline false
status open

\begin_layout Plain Layout

choice = cfg_item; % Defines choice configuration item 
\end_layout

\begin_layout Plain Layout

choice.name = 'Choice';
\end_layout

\begin_layout Plain Layout

choice.tag = 'choice';
\end_layout

\begin_layout Plain Layout

choice.values = {item1, entry1}; % Defines which items will be 
\end_layout

\begin_layout Plain Layout

% selectable in the choice menu.
 
\end_layout

\begin_layout Plain Layout

choice.help = {'Help...'}; 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
cfg_exbranch: 
\begin_inset Newline newline
\end_inset


\family typewriter

\begin_inset listings
inline false
status open

\begin_layout Plain Layout

fct = cfg_exbranch; % Defines the branch that has information 
\end_layout

\begin_layout Plain Layout

% about how to run this module fct.name = 'Trim'; 
\end_layout

\begin_layout Plain Layout

fct.tag = 'trim'; 
\end_layout

\begin_layout Plain Layout

fct.val = {choice}; % The items that belong to this branch.
 
\end_layout

\begin_layout Plain Layout

% All items must be filled before this 
\end_layout

\begin_layout Plain Layout

% branch can run or produce virtual 
\end_layout

\begin_layout Plain Layout

% outputs 
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

fct.prog = @cfg_run_fct; % A function handle that will be called 
\end_layout

\begin_layout Plain Layout

% with the harvested job to run the 
\end_layout

\begin_layout Plain Layout

% computation 
\end_layout

\begin_layout Plain Layout

trim.vout = @cfg_vout_fct; % A function handle that will be 
\end_layout

\begin_layout Plain Layout

% called with the harvested job to 
\end_layout

\begin_layout Plain Layout

% determine virtual outputs 
\end_layout

\begin_layout Plain Layout

trim.help = {Help...'}; 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
There exists a number of other item classes.
 Here is a list of the most important classes: cfg_item, cfg_entry, cfg_choice,
 cfg_menu, cfg_exbranch, cfg_files, cfg_branch, cfg_repeat
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

For more information call the help function in matlab (e.g.
 help help cfg_item)
\end_layout

\end_deeper
\begin_layout Itemize
Note:
\begin_inset Newline newline
\end_inset

The inputs to each module have to be described in a tree-like structure.
\begin_inset Newline newline
\end_inset

During data entry, there is no way to change the tree structure based on
 input data.
 Add application to the configuration tree by default
\end_layout

\begin_layout Subsubsection
Add application to the configuration tree by default
\end_layout

\begin_layout Standard
In the following it is shown how an application can be added to the menu
 bar of matlabbatch by default (without adding it every time matlabbatch
 is started)
\end_layout

\begin_layout Itemize
Start matlabbatch and add the appliaction cfg_confgui in the folder matlabbatch/
cfg_confgui 
\end_layout

\begin_layout Itemize
Put Generate code into the Module list by selecting ConfGUI –> Generate
 code in the menu bar
\end_layout

\begin_layout Itemize
Fill out all the input fields on the right side: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Output filename: This file will contain the whole menu structure, validity
 constraints and links to run time code of the appliaction.
\end_layout

\begin_layout Itemize
Output directory: All files which are created by the ConfGUI will be stored
 into this directory (chose a directory which is added to the matlab path)
\end_layout

\begin_layout Itemize
Root node of config: Name of the root node of the appliaction's configuration
 tree
\end_layout

\begin_layout Itemize
Options: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Create Defaults File: Yes
\end_layout

\begin_layout Enumerate
Create mlbatch_appcfg File: Yes
\end_layout

\begin_layout Enumerate
Create Code for addpath(): No 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Finally press the green arrow on the upper left side of the batch editor
\end_layout

\begin_layout Itemize
As no error occurred 3 new files ({Output filename}.m, {Output filename}_def.m,
 cfg_mlbatch_appcfg.m) should be created and added into the folder {Output
 directory}.
\end_layout

\begin_layout Itemize
Each time matlabbatch is started, it will search for any cfg_mlbatch_appcfg.m
 file (this file contains the names of the configuration files) and will
 add the corresponding application to the batch editor.
 
\end_layout

\begin_layout Subsubsection
Add modules to module list
\end_layout

\begin_layout Standard
Example: Module Import and Trim will be added to the module list
\family typewriter

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

arg1 = 'scr.prep.import_data'; 
\end_layout

\begin_layout Plain Layout

arg2 = 'scr.prep.trim'; 
\end_layout

\begin_layout Plain Layout

mod_cfg_id1 = cfg_util('tag2mod_cfg_id',arg1); 
\end_layout

\begin_layout Plain Layout

mod_cfg_id2 = cfg_util('tag2mod_cfg_id',arg2); 
\end_layout

\begin_layout Plain Layout

cjob = cfg_util('initjob'); 
\end_layout

\begin_layout Plain Layout

mod_job_id1 = cfg_util('addtojob', cjob, mod_cfg_id1); 
\end_layout

\begin_layout Plain Layout

mod_job_id2 = cfg_util('addtojob', cjob, mod_cfg_id2); 
\end_layout

\begin_layout Plain Layout

cfg_util('harvest', cjob, mod_job_id1); 
\end_layout

\begin_layout Plain Layout

cfg_util('harvest', cjob, mod_job_id2); 
\end_layout

\begin_layout Plain Layout

cfg_ui('local_showjob', cfg_ui, cjob); 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Changes
\end_layout

\begin_layout Itemize
In the function private/cfg_onscreen at line 36 figure(fg); is commented
 out in order to prevent the appearance of the GUI for a short time if the
 function cfg_ui('Visible', 'off') is called.
\end_layout

\begin_layout Subsection
Matlabbatch: changing help texts and fieldnames 
\end_layout

\begin_layout Subsubsection
File structure of matlabbatch GUI
\end_layout

\begin_layout Standard
There exist two files per function: 1 configuration file and 1 run file.
 The configuration file defines the structure of the corresponding function
 in the matlabbatch GUI whereas the run file firstly gathers all entered
 values and secondly calls the corresponding SCR function.
 Both types of files are located in the subfolder pspm_cfg.
 The name of a configuration or a run file consists of two parts.
 The prefix of a configuration filename is called pspm_cfg_ whereas the
 filename of a run file begins with pspm_cfg_run.
 The second part of the filename is named after the function name (eg.
 for the function pspm_import.m -> pspm_cfg_import.m, pspm_cfg_run_import.m).
\end_layout

\begin_layout Subsubsection
Edit help texts and fieldname
\end_layout

\begin_layout Standard
In order to change any help text or fieldname in a matlabbatch GUI function
 the corresponding configuration file has to be opened.
 For each item in a matlabbatch GUI function a struct variable which contains
 several struct fields is defined in the configuration file.
 
\end_layout

\begin_layout Itemize
Help text The field .help defines the help text of the item which can be
 edited in order to change the help text.
 As soon as matlabbatch has been closed and opened again, the changes in
 the help text will be visible in matlabbatch GUI.
\end_layout

\begin_layout Itemize
Fieldname The fieldname of an matlabbatch GUI item is defined by the struct
 field .tag .
 In case a fieldname of an item should be changed be careful to verify if
 no other item, which has the same root node, hold the same fieldname.
 Otherwise matlabbatch will not work properly.
 After the fieldname of an item has been changed the run file (pspm_cfg_run_func
tionname.m) of the corresponding function has to be adapted as well in order
 to ensure that the function call in the run file is done properly.
\end_layout

\begin_layout Subsection
Recommendations for GUI development
\end_layout

\begin_layout Subsubsection
Mlapp
\end_layout

\begin_layout Standard
Mlapp is the new format for developing GUI in Matlab.
 The old GUIDE based GUI will lose support from Mathworks in a future release.
 Therefore, it is recommended to move from the old GUIDE to the new Mlapp.
\end_layout

\begin_layout Standard
The .mlapp file can be created natively through the new Matlab GUI guide.
 Alternatively, it can be generated by converting the classic GUIDE based
 .fig file through the feature 
\shape italic
migration
\shape default
.
\end_layout

\begin_layout Subsubsection
Style
\end_layout

\begin_layout Standard
The new GUI is currently using the colour #7f2534 for stylishing.
 The main typeface for UI design is Verdana, which is supported in Windows,
 macOS and Linux.
\end_layout

\begin_layout Section
Test Environment
\end_layout

\begin_layout Standard

\shape italic
Contributed by Linus Rüttimann & Tobias Moser.
\end_layout

\begin_layout Subsection
Unittest: General implementation
\end_layout

\begin_layout Standard
In PsPM the Matlab Unit Testing Framework is used for testing of functions.
 For each tested function there is a Matlab class with the name ‘functionname_te
st’, which contains the unittests for that specific function.
 Additionally there is a documentation page for each of the test classes,
 where information about the unittests can be found.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

To run the unittests of a test class, an object of the class has to be created:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

testCase = functionname_test
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

where ‘testCase’ is an arbitrary object name and ‘funtionname_test’ is the
 name of a test class.
 Then all the unittest that are contained in the test class can be run with:
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

testCase.run
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

A specific unittest can be run with:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

testCase.run(‘unittest_name’)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Remember that a new test class object must be generated each time the test
 class has been changed.
\end_layout

\begin_layout Subsection
Parameterized test classes
\end_layout

\begin_layout Standard
Parmeterized test classes is a feature provided by the Matlab test case
 class.
 A test class is parameterized when it has 
\end_layout

\begin_layout Itemize
Test parameters defined (within the property section)
\end_layout

\begin_layout Itemize
Test methods implementing the defined test parameters
\end_layout

\begin_layout Standard
Each function implementing test parameters will be called multiple times
 with each possible parameter combination (which is determined by Matlab).
 Thus parameterized classes allow to write single tests for different parameter
 combinations.
 If one of the following test cases is a parameterized test class, it will
 be mentioned accordingly.
\end_layout

\begin_layout Subsection
Testcases: pspm_align_channels_test
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_align_channels_test
\begin_inset Newline newline
\end_inset

Function: [sts, data, duration] = pspm_align_channels(data, induration)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
This test uses data stored in 
\family typewriter
ImportTestData/ecg2hb/tpspm_s102_s1.mat
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this)
\begin_inset Newline newline
\end_inset

Description: Checks for warnings given invalid inputs.
\end_layout

\begin_layout Subsubsection*
Lower optional duration
\end_layout

\begin_layout Standard
Function name: lower_optional_duration(this)
\begin_inset Newline newline
\end_inset

Description: Passes an optional duration that is less than the maximum duration
 of all channels in the input to pspm_align_channels.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Assert that lower optional duration has no effect on the output.
\end_layout

\begin_layout Enumerate
Check if all of the returned channels have the same duration.
\end_layout

\begin_layout Subsubsection*
Same optional duration
\end_layout

\begin_layout Standard
Function name: same_optional_duration(this)
\begin_inset Newline newline
\end_inset

Description: Passes an optional duration that is equal to the maximum duration
 of all channels in the input to pspm_align_channels and does the exact
 same checks as in lower duration case.
\end_layout

\begin_layout Subsubsection*
Higher optional duration
\end_layout

\begin_layout Standard
Function name: higher_optional_duration(this)
\begin_inset Newline newline
\end_inset

Description: Passes an optional duration that is higher than the maximum
 duration of all channels.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Assert that durations of all returned channels is the same as the passed
 optional duration.
\end_layout

\begin_layout Subsubsection*
Max duration is passed in marker channel
\end_layout

\begin_layout Standard
Function name: max_duration_is_given_in_events(this)
\begin_inset Newline newline
\end_inset

Description: Passes the maximum duration in marker channel to pspm_align_channel
s.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Assert that all returned channels are aligned to the maximum duration passed
 in marker channel.
\end_layout

\begin_layout Subsubsection*
Various case checks
\end_layout

\begin_layout Standard
Function names:
\end_layout

\begin_layout Enumerate
only_one_channel_longer_others_same(this)
\end_layout

\begin_layout Enumerate
only_one_channel_shorter_others_same(this)
\end_layout

\begin_layout Enumerate
increasing_channel_lengths(this)
\end_layout

\begin_layout Enumerate
two_same_others_shorter(this)
\end_layout

\begin_layout Standard
Description: In each of these cases check if the returned channels have
 the same duration that is equal to the maximum duration of all input channels.
\end_layout

\begin_layout Subsection
Testcases: pspm_butter
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_butter_test 
\begin_inset Newline newline
\end_inset

Function: [sts, b, a] = pspm_butter(order, freqratio, pass)
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid and
 if the Signal processing toolbox is installed.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_butter() [no input]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_butter(1,1,'abc') [pass not equal to 'high' or 'low']
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_butter(2,1) ['Signal processing toolbox is missing' #1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:toolbox_missing
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_butter(1,1) ['Signal processing toolbox is missing' #2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:toolbox_missing
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Testcases: pspm_bf_test
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_bf_test
\begin_inset Newline newline
\end_inset

Function: [bs, x] = pspm_bf_<specific function name>
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
This test class is parameterized.
\end_layout

\begin_layout Subsubsection*

\series bold
Method setup parameters
\end_layout

\begin_layout Standard
These parameters define which function should be tested
\series bold
.
\begin_inset Newline newline
\end_inset


\series default

\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Basis function
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specifies the basis functions to test (without the 'pspm_bf_' prefix).
 The current basis function to test is then called via this.bf();
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Test parameters
\end_layout

\begin_layout Standard
These are parameters which define what kind of data or option should be
 passed to each basis function.
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Time res log
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specifies for the basic test different time resolutions (argument 'td')
 which a basis function should be able to handle (as long as td <= duration).
 The values are logarithmic and have to be translated before passed to the
 basis function.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
this.bf() [no parameters]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
this.bf(dur+1) [pass 'td' > duration of function]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
this.bf(0) [invalid time resolution]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Basic
\end_layout

\begin_layout Standard
Function name: test_basic(this, time_res_log)
\begin_inset Newline newline
\end_inset

Description: Test for different requirements to verify whether the current
 basis function is valid or not.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test with td = 0.1, verify that no warning is issued and determine the duration
\end_layout

\begin_layout Enumerate
Test with td = 0.01 and check if the new duration is equal to the duration
 calculated before.
\end_layout

\begin_layout Enumerate
Test if function runs through without warning and that the time vector begins
 at <= 0.
\end_layout

\begin_layout Enumerate
Test if the function runs through without warning with td = 10^time_res_log
 (as long as td < duration)
\end_layout

\begin_layout Subsection
Testcases: pspm_convert_unit
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_convert_unit_test
\begin_inset Newline newline
\end_inset

Function: [sts, converted] = pspm_convert_unit(data, from, to)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Subsubsection*
Constants
\end_layout

\begin_layout Itemize
inch_to_cm = 2.54
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(testCase)
\begin_inset Newline newline
\end_inset

Description: Pass invalid from or to metrics and check if warnings are issued.
\end_layout

\begin_layout Subsubsection*
Valid input
\end_layout

\begin_layout Standard
Function name: valid_input(this)
\begin_inset Newline newline
\end_inset

Description: Pass various valid inputs and compare results to manually calculate
d ones.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
If empty input data is passed, result is also empty.
\end_layout

\begin_layout Enumerate
Convert single cm value to m.
\end_layout

\begin_layout Enumerate
Various unit conversion checks:
\end_layout

\begin_deeper
\begin_layout Enumerate
Conversion between same units (cm to cm)
\end_layout

\begin_layout Enumerate
mm to km and km to mm conversions
\end_layout

\begin_layout Enumerate
inch to cm conversions
\end_layout

\end_deeper
\begin_layout Enumerate
Negative value conversions
\end_layout

\begin_layout Enumerate
Convert single dimensional array with multiple elements.
\end_layout

\begin_layout Enumerate
Convert each element in 3D array.
\end_layout

\begin_layout Subsection
Testcases: pspm_ecg2hb
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_ecg2hb_test 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Function: [sts,pt_debug] = pspm_ecg2hb(fn, chan, options)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Subsubsection*
Constants
\end_layout

\begin_layout Itemize
testdata{0}.chan_struct = struct('nr', 1, 'name', 'ecg');
\end_layout

\begin_layout Itemize
testdata{0}.filename = 'ImportTestData
\backslash
ecg2hb
\backslash
test_ecg77.mat';
\end_layout

\begin_layout Itemize
testdata{0}.num_channels = 1
\end_layout

\begin_layout Itemize
testdata{1}.chan_struct = struct('nr', 3, 'name', 'ecg');
\end_layout

\begin_layout Itemize
testdata{1}.filename = 'ImportTestData
\backslash
ecg2hb
\backslash
tpspm_s102_s1.mat';
\end_layout

\begin_layout Itemize
testdata{1}.num_channels = 5
\end_layout

\begin_layout Itemize
backup_suffix = '_backup';
\end_layout

\begin_layout Itemize
options = struct('semi', 0);
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input arguments
\end_layout

\begin_layout Standard
Function name: invalid_input(this)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Description: Pass invalid input arguments and check if the warnings are
 as expected.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="10cm">
<column alignment="center" valignment="top" width="5cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ecg2hb() [no arguments]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ecg2hb(1) [invalid file name]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ecg2hb(this.fn, 'bla') [invalid channel (text)]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ecg2hb(this.fn, 1) [invalid channel type]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:not_allowed_channeltype
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
o.twthresh = 'bla'; pspm_ecg2hb(this.fn, this.chan.nr, o) [invalid twthresh
 (text)]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
o.minHR = 202; pspm_ecg2hb(this.fn, this.chan.nr, o) [invalid minHR (> default_maxHR
)]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
o.minHR = 202; o.maxHR = 19; pspm_ecg2hb(this.fn, this.chan.nr, o) [invalid minHR
 > maxHR]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
o.maxHR = 19; pspm_ecg2hb(this.fn, this.chan.nr, o) [invalid maxHR (< default_minHR)
]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
o.debugmode = 5; pspm_ecg2hb(this.fn, this.chan.nr, o) [invalid debugmode (not
 in [0,1])]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
o.semi = 5; pspm_ecg2hb(this.fn, this.chan.nr, o) [invalid semi (not in [0,1])]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Valid input arguments
\end_layout

\begin_layout Standard
Function name: valid_input(this)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Description: Pass valid input arguments and check if there are no warnings.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ecg2hb(this.fn, this.chan.nr, this.options)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ecg2hb(this.fn, this.chan.name, this.options)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
this.test_added_data()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Other Methods
\end_layout

\begin_layout Subsubsection*
Test for added data
\end_layout

\begin_layout Standard
Function name: test_added_data()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Description: Check if added hb channels show an expected behaviour.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests (for each channel):
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tested Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sampling rate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
'events'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Channel type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
'hb'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Amount of data points in data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
> 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Heartbeat indices are monotonically increasing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum number of heartbeats per second
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
< 5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data is distributed equally (standard deviation)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
< 2s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time between end of recording and last data point
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
< 60s
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Testcases: pspm_filtfilt
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_filtfilt_test 
\begin_inset Newline newline
\end_inset

Function: y = pspm_filtfilt(b,a,x)
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_filtfilt() [no input]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_filtfilt([1:10],[1:20],[1:10]) [data length less than 3 times filter
 order]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Testcases: pspm_find_channel
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_find_channel_test 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Function: chan = pspm_find_channel(headercell, chantype) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input arguments
\end_layout

\begin_layout Standard
Function name: invalid_inputargs(this) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Setup: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\family typewriter
headercell = {'heart', 'scr', 'pupil'};
\family default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel('str','scr') [no headercell]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel(headercell, 'str')
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:not_allowed_channeltype
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel(headercell, 4) [no string chantype]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Valid Input Arguments
\end_layout

\begin_layout Standard
Function name: valid_inputargs(this) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Description: Checks for correct return value if the input arguments are
 valid 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Setup: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\family typewriter
headercell = {'heart', 'scr', 'pupil', 'mark', 'gsr', 'eda'};
\family default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="6cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exp.
 Output
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel(headercell, 'pupil')
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel(headercell, 'resp')
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:no_matching_channels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel(headercell, 'scr')
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:multiple_matching_channels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel(headercell, {'mark', 'str', 'bla'})
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel(headercell, {'call', 'str', 'me'})
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
no matching channel, but no warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel(headercell, {'scr', 'gsr', 'eda'})
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
multiple matching channels, but no warning
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Testcases: pspm_extract_segments
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_extract_segments_test
\begin_inset Newline newline
\end_inset

Function: [sts, out] = pspm_extract_segments(varargin)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
This test class is parameterized.
 For manual mode tests, the test data is generated by the function itself
 and when needed, files will be written to testdatafile<variable_nr>.mat.
 For auto mode tests, the test data must be in 
\family typewriter
ImportTestData/fitted_models
\family default
 folder with names as specified in the tests.
\end_layout

\begin_layout Subsubsection*
Test parameters
\end_layout

\begin_layout Standard
These are parameters which define what kind of data should be passed to
 
\family typewriter
pspm_extract_segments
\family default
 in auto mode tests and which options should be set.
\end_layout

\begin_layout Itemize
nan_output: This option defines whether the user wants to output the NaN
 ratios of the trials for each condition.
 If so, we values can be printed on the screen (on MATLAB command window)
 or written to a created file.
\end_layout

\begin_layout Itemize
nan_ratio: Defines ratio of NaN values in the generated test data
\end_layout

\begin_layout Itemize
nr_trail: Number of trails in the generated test data
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
\end_layout

\begin_layout Standard
Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments('a','b')
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments('manual',fn,0)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments('manual',struct('a',10),0,timing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments('manual',[1,3],logical(32),timing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments('manual',fn,'a',timing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments('manual',fn,{'a'},timing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments('auto',{1})
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments('auto','some')
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Test manual mode with indicated length
\end_layout

\begin_layout Standard
Function name: test_manual_length(this,nr_trial,nan_ratio)
\begin_inset Newline newline
\end_inset

Desctiption: Checks for equality of produced segments by pspm_extract_segments
 with manually computed segments
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate segments form test data.
\end_layout

\begin_layout Enumerate
Test if function call wirked WarningFree
\end_layout

\begin_layout Enumerate
Test if variable 'segments' existis in output
\end_layout

\begin_layout Enumerate
Test if correct number of segments were produced
\end_layout

\begin_layout Enumerate
Test each segment holds correct data 
\end_layout

\begin_layout Subsubsection*
Test manual mode with durations
\end_layout

\begin_layout Standard
Function name: test_manual_duration(this,nr_trial,nan_ratio)
\begin_inset Newline newline
\end_inset

Desctiption: Checks for equality of produced segments by pspm_extract_segments
 with manually computed segments
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate segments form test data.
\end_layout

\begin_layout Enumerate
Test if function call wirked WarningFree
\end_layout

\begin_layout Enumerate
Test if variable 'segments' existis in output
\end_layout

\begin_layout Enumerate
Test if correct number of segments were produced
\end_layout

\begin_layout Enumerate
Test each segment holds correct data
\end_layout

\begin_layout Subsubsection*
Test auto mode with GLM using marker onsets
\end_layout

\begin_layout Standard
Function name: 
\family typewriter
test_auto_mode_glm_with_markers(this)
\family default

\begin_inset Newline newline
\end_inset

Description: Runs 
\family typewriter
pspm_extract_segments
\family default
 with a particular GLM model stored in 
\family typewriter
ImportTestData/fitted_models
\family default
 and compares the results to manually calculated results.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if length of the returned cell array (from now on called 
\family typewriter
segments
\family default
) is the same as the number of conditions
\end_layout

\begin_layout Enumerate
Test if shape of data arrays in each element of 
\family typewriter
segments
\family default
 agrees with the passed durations and number of onsets.
\end_layout

\begin_layout Enumerate
Test if 
\family typewriter
segments.trial_idx
\family default
 agrees with input data.
\end_layout

\begin_layout Enumerate
Test if statistics calculated manually from 
\family typewriter
segments.data
\family default
 is the same as 
\family typewriter
segments.mean
\family default
 and 
\family typewriter
segments.std
\family default
.
\end_layout

\begin_layout Enumerate
Compute each statistic field in each element of 
\family typewriter
segments
\family default
 manually using the input data and compare the results to 
\family typewriter
segments
\family default
.
\end_layout

\begin_layout Subsubsection*
Test auto mode with GLM using second onsets
\end_layout

\begin_layout Standard
Function name: 
\family typewriter
test_auto_mode_glm_with_seconds(this)
\family default

\begin_inset Newline newline
\end_inset

Description: Do the exact same tests as in 
\family typewriter
test_auto_mode_glm_with_markers
\family default
 but this time using seconds to specify onsets.
\end_layout

\begin_layout Subsubsection*
Test auto mode with DCM
\end_layout

\begin_layout Standard
Note: Since in DCM case onsets are calculated using trial start and end
 seconds of DCM trials, there is no second/marker distinction in DCM test.
\begin_inset Newline newline
\end_inset

Function name: 
\family typewriter
test_auto_mode_dcm(this)
\family default

\begin_inset Newline newline
\end_inset

Description: Runs 
\family typewriter
pspm_extract_segments
\family default
 with a particular DCM model stored in 
\family typewriter
ImportTestData/fitted_models
\family default
 and compares the results to manually calculated results.
 In order to get meaningful condition statistic information this test function
 assigns the same trial name to certain groups of trials.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: Do the exact same tests as in 
\family typewriter
test_auto_mode_glm_with_markers
\family default
 by adapting the computation steps to DCM case.
\end_layout

\begin_layout Subsection
Testcases: pspm_find_sounds
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_find_sounds_test
\begin_inset Newline newline
\end_inset

Function: [sts, infos] = pspm_find_sounds(file, options)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
This test class is parameterized.
 The test data is generated by the function itself and when needed, files
 will be written to testdatafile<variable_nr>.mat.
\end_layout

\begin_layout Subsubsection*
Test parameters
\end_layout

\begin_layout Standard
These are parameters which define what kind of data should be passed to
 pspm_find_sounds and which options should be set.
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Channel output
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specifies whether 'all' found markers or only 'corrected' markers should
 be returned.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Max delay
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Varies the max delay option and defines how far away a marker at most can
 be.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Min delay
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Varies the min delay option and defines how far away a marker at least should
 be.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Threshold
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines the minimum size of a marker to be recognized as a marker event.
 Passed in percent of the maximum amplitude of the recorded data.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Resample
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines whether the function should resample (and interpolate) the data
 to a higher sample rate in order to get more exact marker findings.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Channel action
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines whether a newly created marker channel should replace the existing
 marker channel or should be added as a new marker channel.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds('')
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:file_not_found
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn) [invalid pspm file]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn) [pspm file without a 'snd' channel]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:no_sound_chan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn, o) [invalid values for positive integer fields]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn, o) [invalid values for positive numeric fields]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn, o) [invalid values for logic fields]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn, o) [invalid channel ids for channel fields]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:out_of_range
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn, o) [enabled diagnostics without a marker channel]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:no_marker_chan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn, o) [invalid values for channelaction]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn, o) [invalid values for roi]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds(fn, o) [maxdelay < mindelay]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Test add channel
\end_layout

\begin_layout Standard
Function name: test_add_channel(this, channeloutput, max_delay, resample,
 channelaction)
\begin_inset Newline newline
\end_inset

Description: Test add channel with different options.
 Diagnostics is always enabled, Channel output, Max delay, Resample and
 Channel action are varied.
 Once pspm_find_sounds is complete, the function tests if the returned data
 has the expected format.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with channel 'snd' and 'marker'; and count amount of reference
 markers
\end_layout

\begin_layout Enumerate
Set
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
options according to test parameters
\end_layout

\begin_layout Enumerate
diagnostics to 1
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if returned data has the correct format
\end_layout

\begin_layout Enumerate
Test if channels has been added or replaced
\end_layout

\begin_layout Enumerate
Test if added channel has correct amount of data
\end_layout

\begin_layout Subsubsection*
Test region count
\end_layout

\begin_layout Standard
Function name: test_region_count(this)
\begin_inset Newline newline
\end_inset

Description: Test region of interest in combination with expected sound
 count.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with channel 'snd' and 'marker'
\end_layout

\begin_layout Enumerate
Test if function finds the function finds all markers in the whole file
\end_layout

\begin_layout Enumerate
Test if function finds all the markers in the whole file with initial threshold
 1
\end_layout

\begin_layout Enumerate
Test if function finds half of the markers in half of the file
\end_layout

\begin_layout Subsubsection*
Test threshold
\end_layout

\begin_layout Standard
Function name: test_threshold(this, threshold)
\begin_inset Newline newline
\end_inset

Description: Vary the threshold option and test whether the functions returnes
 the expected data.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with channel 'snd' and 'marker'
\end_layout

\begin_layout Enumerate
Set
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
threshold according to test parameter
\end_layout

\begin_layout Enumerate
diagnostics to 1
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if returned data has the correct format
\end_layout

\begin_layout Subsubsection*
Test plot
\end_layout

\begin_layout Standard
Function name: test_plot(this, threshold)
\begin_inset Newline newline
\end_inset

Description: Test if the plot functions returne the expected data and runs
 through without warning.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with channel 'snd' and 'marker'
\end_layout

\begin_layout Enumerate
Set
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
plot to 1
\end_layout

\begin_layout Enumerate
diagnostics to 1
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if returned data has the correct format
\end_layout

\begin_layout Subsection
Testcases: pspm_find_valid_fixations
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_find_valid_fixations_test
\begin_inset Newline newline
\end_inset

Function: [sts, out_file] = pspm_find_valid_fixations(fn, options)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
This test class is parameterized.
 The test data is generated by the function itself and when needed, files
 will be written to testdatafile<variable_nr>.mat.
\end_layout

\begin_layout Paragraph*
Test parameters
\end_layout

\begin_layout Standard
These are parameters which define what kind of data should be passed to
 pspm_find_valid_fixations and which options should be set.
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Distance
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Used for gaze validation; defines the distance between eyes and screen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Aspect used
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Used for gaze validation; defines the aspect ratio set in the software.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Aspect actual
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Used for gaze validation; defines the aspect ratio of the hardware.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Screen size
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Used for gaze validation; defines the size of the screen in inches.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Eyes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Is used for data generation and tells the function for which eyes data should
 be generated.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Channel action
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines whether to 'add' or 'replace' existing channels.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Newfile
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines whether to create a new file or extend the existing file.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Overwrite
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines whether to overwrite the existing file or not.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Interpolate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines whether to interpolate NaN values in validated channels or not.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Missing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines whether to create a channel which holds information about which
 positions have been set to NaN (and may have been interpolated afterwards).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Work eye
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines which eyes should be used for fixation validation.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Work chans
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines which channels should be set to NaN during invalid fixations.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="20" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations('a')
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.validate_fixations]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.box_degree]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.screen_settings]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [missing fields for options.screen_setting
s]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.aspect_actual]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.aspect_used]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.bitmap]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.display_size]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.display_size]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.fixation_point]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.channel_action]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.newfile]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.overwrite]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.interpolate]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.missing]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid eyes]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations(fn, options) [invalid options.channels]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Test work chans
\end_layout

\begin_layout Standard
Function name: test_work_chans(this, work_chans)
\begin_inset Newline newline
\end_inset

Description: Tests whether the option 'channels' actually works on the specified
 channels or not.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with distance 500, aspect_used 16:9, aspect_actual 4:3, screen_siz
e 20 and eyes 'lr'
\end_layout

\begin_layout Enumerate
Set options with
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
overwrite = 1
\end_layout

\begin_layout Enumerate
channels = work_chans
\end_layout

\begin_layout Enumerate
channel_action = 'add'
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if sts equals 1
\end_layout

\begin_layout Enumerate
Test if specified work_chans are added as new processed channels
\end_layout

\begin_layout Subsubsection*
Test work eye
\end_layout

\begin_layout Standard
Function name: test_work_eye(this, work_eye)
\begin_inset Newline newline
\end_inset

Description: Test whether the option 'eyes' actually works on the specified
 eyes or not.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with distance 500, aspect_used 16:9, aspect_actual 4:3, screen_siz
e 20 and eyes 'lr'
\end_layout

\begin_layout Enumerate
Set options with
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
overwrite = 1
\end_layout

\begin_layout Enumerate
eyes = work_eye
\end_layout

\begin_layout Enumerate
channel_action = 'add'
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if sts equals 1
\end_layout

\begin_layout Enumerate
Test if specified eyes have been processed accordingly and test if not specified
 eyes have ignored.
\end_layout

\begin_layout Subsubsection*
Test missing
\end_layout

\begin_layout Standard
Function name: test_missing(this, missing)
\begin_inset Newline newline
\end_inset

Description: Test whether for each a a new missing channel is created if
 missing is specified as true.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with distance 500, aspect_used 16:9, aspect_actual 4:3, screen_siz
e 20 and eyes 'lr'
\end_layout

\begin_layout Enumerate
Set options with
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
overwrite = 1
\end_layout

\begin_layout Enumerate
missing = missing
\end_layout

\begin_layout Enumerate
channel_action = 'add'
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if sts equals 1
\end_layout

\begin_layout Enumerate
Depending on the status of 'missing' test if there are any missing channels
 or if there is no missing channel
\end_layout

\begin_layout Subsubsection*
Test interpolate
\end_layout

\begin_layout Standard
Function name: test_interpolate(this, interpolate)
\begin_inset Newline newline
\end_inset

Description: Test whether data is interpolated during periods which are
 set to NaN by the function.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with distance 500, aspect_used 16:9, aspect_actual 4:3, screen_siz
e 20 and eyes 'lr'
\end_layout

\begin_layout Enumerate
Set options with
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
overwrite = 1
\end_layout

\begin_layout Enumerate
interpolate = interpolate
\end_layout

\begin_layout Enumerate
channel_action = 'add'
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if sts equals 1
\end_layout

\begin_layout Enumerate
Depending on the status of 'interpolate' test whether there are some NaN
 values or if NaN periods have been interpolated accordingly.
\end_layout

\begin_layout Subsubsection*
Test overwrite
\end_layout

\begin_layout Standard
Function name: test_overwrite(this, overwrite)
\begin_inset Newline newline
\end_inset

Description: Test if files are overwritten, if specified with 'overwrite'
 option.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with distance 500, aspect_used 16:9, aspect_actual 4:3, screen_siz
e 20 and eyes 'lr'
\end_layout

\begin_layout Enumerate
Set options with
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
overwrite = 1
\end_layout

\begin_layout Enumerate
interpolate = interpolate
\end_layout

\begin_layout Enumerate
channel_action = 'add'
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if sts equals 1
\end_layout

\begin_layout Enumerate
Test if file has been overwritten or not (tests, if there are any new channels).
\end_layout

\begin_layout Subsubsection*
Test channel action
\end_layout

\begin_layout Standard
Function name: test_channel_action(this, channel_action)
\begin_inset Newline newline
\end_inset

Description: Test if channels are added or replaced (according to channel_action
).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with distance 500, aspect_used 16:9, aspect_actual 4:3, screen_siz
e 20 and eyes 'lr'
\end_layout

\begin_layout Enumerate
Set options with
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
overwrite = 1
\end_layout

\begin_layout Enumerate
channel_action = channel_action
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if sts equals 1
\end_layout

\begin_layout Enumerate
Test if channels have been added or replaced (tests, if there are any new
 channels).
\end_layout

\begin_layout Subsubsection*
Test newfile
\end_layout

\begin_layout Standard
Function name: test_newfile(this, newfile)
\begin_inset Newline newline
\end_inset

Description: Test whether the output is written to a newfile or to the input
 file.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with distance 500, aspect_used 16:9, aspect_actual 4:3, screen_siz
e 20 and eyes 'lr'
\end_layout

\begin_layout Enumerate
Set options with
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
overwrite = 1
\end_layout

\begin_layout Enumerate
if newfile enabled
\end_layout

\begin_deeper
\begin_layout Enumerate
search for new file name
\end_layout

\begin_layout Enumerate
set options.newfile to new file name
\end_layout

\end_deeper
\begin_layout Enumerate
if newfile is disabled, set options.newfile to ''
\end_layout

\end_deeper
\begin_layout Enumerate
Test if function runs through without warning
\end_layout

\begin_layout Enumerate
Test if sts equals 1
\end_layout

\begin_layout Enumerate
Test if returned outputfile equals the specified newfile or not (depending
 on the value of 'newfile')
\end_layout

\begin_layout Subsubsection*
Test gaze validation
\end_layout

\begin_layout Standard
Function name: test_gaze_validation(this, distance, screen_size, aspect_actual,
 aspect_used, eyes)
\begin_inset Newline newline
\end_inset

Description: Test whether gaze validation is done correctly.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with the according function parameters
\end_layout

\begin_layout Enumerate
Iterate to returned degree values generated by the generation function
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
set function options
\end_layout

\begin_deeper
\begin_layout Enumerate
overewrite = 1
\end_layout

\begin_layout Enumerate
validate_fixation =1
\end_layout

\begin_layout Enumerate
screen_settings and distance to function call settings
\end_layout

\begin_layout Enumerate
missing = 1
\end_layout

\end_deeper
\begin_layout Enumerate
depending on the specified degree, test whether function runs through without
 warnings or not
\end_layout

\begin_layout Enumerate
load outputfile and test if (according to degree expectation) gaze validation
 has been done or not
\end_layout

\end_deeper
\begin_layout Subsubsection*
Test bitmap validtion
\end_layout

\begin_layout Standard
Function name: test_bitmap_validation(this, distance, resolution, eyes)
\begin_inset Newline newline
\end_inset

Description: Test whether bitmap validation is done correctly.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with the according function parameters
\end_layout

\begin_layout Enumerate
Iterate to returned bitmaps generated by the generation function
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
set function options
\end_layout

\begin_deeper
\begin_layout Enumerate
missing = 1
\end_layout

\end_deeper
\begin_layout Enumerate
ddepending on the specified number of valid fixations in the bitmap, test
 whether function runs through without warnings or not
\end_layout

\begin_layout Enumerate
load outputfile and test if (according to bitmap expectation) bitmap validation
 has been done or not
\end_layout

\end_deeper
\begin_layout Subsection
Testcases: pspm_get_ecg
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_ecg_test 
\begin_inset Newline newline
\end_inset

Function: [sts, data] = pspm_get_ecg(import) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Test
\end_layout

\begin_layout Standard
Function name: test(this) 
\begin_inset Newline newline
\end_inset

Description: Test if all fields are returned correctly 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
Test if data.data is equal import.data
\end_layout

\begin_layout Enumerate
Test if data.header.chantype is ‘ecg’
\end_layout

\begin_layout Enumerate
Test if data.header.units is equal import.units
\end_layout

\begin_layout Enumerate
Test if data.header.sr is equal import.sr 
\end_layout

\begin_layout Subsection
Testcases: pspm_get_events
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_events_test 
\begin_inset Newline newline
\end_inset

Function: [sts, import] = pspm_get_events(import) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Check warnings
\end_layout

\begin_layout Standard
Function name: check_warnings(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the field ‘.markers’ is missing or contains
 invalid content.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Missing marker field
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:nonexistent_field
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
import.marker = ‘foo’
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_field_content
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Timestamps
\end_layout

\begin_layout Standard
Function name: timestamps(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for correct output if the input is timestamp data 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
Test if the length of the output data is equal to the length of the input
 data 
\end_layout

\begin_layout Subsubsection*
Continuous
\end_layout

\begin_layout Standard
Function name: continuous(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for correct output if the input is continuous data 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Perform three tests with different settings
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Tests:
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
Test if the length of the field 'markerinfo' is equal to the length of the
 output data.
\end_layout

\begin_layout Enumerate
Test if the length of the output data is equal to the expected number of
 pulses in the input data.
\end_layout

\begin_layout Standard
Settings:
\end_layout

\begin_layout Enumerate
flank = ‘both’ (default)
\end_layout

\begin_layout Enumerate
flank = 'both' & data offset 50
\end_layout

\begin_layout Enumerate
flank = ‘ascending’
\end_layout

\begin_layout Enumerate
flank = ‘descending’
\end_layout

\begin_layout Enumerate
inverted input signal
\end_layout

\begin_layout Enumerate
signal with angular flanks 
\end_layout

\begin_layout Enumerate
check with
\end_layout

\end_deeper
\begin_layout Enumerate
Additional test for setting (b): Test if data offset has been removed in
 the output data.
\end_layout

\begin_layout Enumerate
Additional test for setting (c) and (d): Test if positions returned by output
 data correspond to flank changes in the input data.
\end_layout

\begin_layout Enumerate
Test if markerinfo is not set if it has been set before.
\end_layout

\begin_layout Subsection
Testcases: pspm_get_eyelink
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_eyelink_test 
\begin_inset Newline newline
\end_inset

Function: [sts, data] = pspm_get_eyelink(import) 
\end_layout

\begin_layout Subsubsection
Methods
\end_layout

\begin_layout Subsubsection*
set_import_values
\end_layout

\begin_layout Standard
Function : [import_struct, channel typles] = set_import_values(this)
\begin_inset Newline newline
\end_inset

Description: Helperfunction, which creates an import data set and the expected
 channel data set 
\end_layout

\begin_layout Subsubsection*
verify_basic_data_structure
\end_layout

\begin_layout Standard
Function name: verify_basic_data_structure(this, data, sourceinfo, channel_types
)
\begin_inset Newline newline
\end_inset

Description: Tests if the returned data structure is valid and match a given
 expected pattern.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if all channels are numeric
\end_layout

\begin_layout Enumerate
Test if recorded time and date have a valid format
\end_layout

\begin_layout Enumerate
Test if blink channels have correct unit
\end_layout

\begin_layout Enumerate
Test if pupil channels have either 'diameter' or 'area' as unit
\end_layout

\begin_layout Enumerate
Test if channels labeled with 'position' have unit 'pixel'
\end_layout

\begin_layout Enumerate
Test if channels labeled with 'blink' have unit 'blink'
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
test_multi_session
\end_layout

\begin_layout Standard
Function name: test_multi_session(this)
\begin_inset Newline newline
\end_inset

Description: Test if the returned data structure fits into the pattern of
 a multi session data set.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Calls 'set_import_values(this)' to get import data set and expected channel
 data set 
\end_layout

\begin_layout Enumerate
passses returned sets to 'verify_basic_data_structure()'
\end_layout

\begin_layout Subsubsection*
test_two_eyes
\end_layout

\begin_layout Standard
Function name: test_two_eyes(this)
\begin_inset Newline newline
\end_inset

Description: Test if the returned data structure fits into the pattern of
 a two eyes data set.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Calls 'set_import_values(this)' to get import data set and expected channel
 data set 
\end_layout

\begin_layout Enumerate
passes returned sets to 'verify_basic_data_structure()'
\end_layout

\begin_layout Subsubsection*
test_one_eye
\end_layout

\begin_layout Standard
Function name: test_one_eye(this)
\begin_inset Newline newline
\end_inset

Description: Test if the returned data structure fits into the pattern of
 a one eye data set.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Creates an import data set and the expected channel data set an pass it
 to 'verify_basic_data_structure()'
\end_layout

\begin_layout Subsubsection*
test_track_dist
\end_layout

\begin_layout Standard
Function name: test_track_dist(this)
\begin_inset Newline newline
\end_inset

Description: Test if the returned data structure fits into the pattern of
 a two eyes data with eyelink_trackdist set.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Calls 'set_import_values(this)' to get import data set and expected channel
 data set 
\end_layout

\begin_layout Enumerate
owerwrites some import data and channel data
\end_layout

\begin_layout Enumerate
pass returned sets to 'verify_basic_data_structure()'
\end_layout

\begin_layout Subsection
Testcases: pspm_get_hb
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_hb_test 
\begin_inset Newline newline
\end_inset

Function: [sts, data] = pspm_get_hb(import) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Test
\end_layout

\begin_layout Standard
Function name: test(this) 
\begin_inset Newline newline
\end_inset

Description: Test if all fields are returned correctly 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
Test if data.data is equal import.data
\end_layout

\begin_layout Enumerate
Test if data.header.chantype is ‘hb’
\end_layout

\begin_layout Enumerate
Test if data.header.units is ‘events’
\end_layout

\begin_layout Enumerate
Test if data.header.sr is 1 
\end_layout

\begin_layout Subsection
Testcases: pspm_get_hr
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_hr_test 
\begin_inset Newline newline
\end_inset

Function: [sts, data] = pspm_get_hr(import) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Test
\end_layout

\begin_layout Standard
Function name: test(this) 
\begin_inset Newline newline
\end_inset

Description: Test if all fields are returned correctly 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
Test if data.data is equal import.data
\end_layout

\begin_layout Enumerate
Test if data.header.chantype is ‘hr’
\end_layout

\begin_layout Enumerate
Test if data.header.units is equal import.units
\end_layout

\begin_layout Enumerate
Test if data.header.sr is equal import.sr 
\end_layout

\begin_layout Subsection
Testcases: pspm_get_marker
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_marker_test 
\begin_inset Newline newline
\end_inset

Function: [sts, data] = pspm_get_marker(import) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Test
\end_layout

\begin_layout Standard
Function name: test(this) 
\begin_inset Newline newline
\end_inset

Description: Test if all fields are returned correctly 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
Test if data.data is equal import.data
\end_layout

\begin_layout Enumerate
Test if data.header.chantype is ‘marker’
\end_layout

\begin_layout Enumerate
Test if data.header.units is ‘events’
\end_layout

\begin_layout Enumerate
Test if data.header.sr is 1 
\end_layout

\begin_layout Subsection
Testcases: pspm_get_pupil
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_pupil_test 
\begin_inset Newline newline
\end_inset

Function: [sts, data] = pspm_get_pupil(import) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Test
\end_layout

\begin_layout Standard
Function name: test(this) 
\begin_inset Newline newline
\end_inset

Description: Test if all fields are returned correctly 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
Test if data.data is equal import.data
\end_layout

\begin_layout Enumerate
Test if data.header.chantype is ‘pupil’
\end_layout

\begin_layout Enumerate
Test if data.header.units is equal import.units
\end_layout

\begin_layout Enumerate
Test if data.header.sr is equal import.sr 
\end_layout

\begin_layout Subsection
Testcases: pspm_get_resp
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_resp_test 
\begin_inset Newline newline
\end_inset

Function: [sts, data] = pspm_get_resp(import) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Test
\end_layout

\begin_layout Standard
Function name: test(this) 
\begin_inset Newline newline
\end_inset

Description: Test if all fields are returned correctly 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
Test if data.data is equal import.data
\end_layout

\begin_layout Enumerate
Test if data.header.chantype is ‘resp’
\end_layout

\begin_layout Enumerate
Test if data.header.units is equal import.units
\end_layout

\begin_layout Enumerate
Test if data.header.sr is equal import.sr 
\end_layout

\begin_layout Subsection
Testcases: pspm_get_scr
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_scr_test 
\begin_inset Newline newline
\end_inset

Function: [sts, data] = pspm_get_scr(import) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Standard
There are three test functions.
 One for the case that no transfer parameters are defined, one for the case
 that the transfer parameters are defined in a struct and one for the case
 that they are defined in a .mat file.
 They are all performing the following tests, plus eventually some individual
 tests
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
Test if the field data.data exists
\end_layout

\begin_layout Enumerate
Test if the field data.data is not empty
\end_layout

\begin_layout Enumerate
Test if the field data.header.units exists
\end_layout

\begin_layout Enumerate
Test if the field data.header.sr exists
\end_layout

\begin_layout Enumerate
Test if the field data.header.chantype exists
\end_layout

\begin_layout Enumerate
Test if data.header.sr is equal import.sr
\end_layout

\begin_layout Enumerate
Test if data.header.chantype is ‘scr’ 
\end_layout

\begin_layout Subsubsection*
No transfer parameters
\end_layout

\begin_layout Standard
Function name: no_transferparams(testCase) 
\begin_inset Newline newline
\end_inset

Description: Test if all fields are returned correctly, if no transfer parameter
s are defined.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Additional Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

No additional tests 
\end_layout

\begin_layout Subsubsection*
Struct transfer parameters
\end_layout

\begin_layout Standard
Function name: stuct_transferparams(testCase) 
\begin_inset Newline newline
\end_inset

Description: Test if all fields are returned correctly, if the transfer
 parameters are defined in a struct.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Additional Tests:
\end_layout

\begin_layout Enumerate
Check for warning if the conversion constant (import.transfer.c) is not defined
\end_layout

\begin_layout Enumerate
Checks that there are no warnings if import.transfer.Rs or import.transfer.offset
 is not defined.
 
\end_layout

\begin_layout Subsubsection*
File transfer parameters
\end_layout

\begin_layout Standard
Function name: file_transferparams(testCase) 
\begin_inset Newline newline
\end_inset

Description: Test if all fields are returned correctly, if the transfer
 parameters are defined in a .mat file.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Additional Tests:
\end_layout

\begin_layout Enumerate
Check for warning if the transfer parameter file doesn’t exist.
 
\end_layout

\begin_layout Subsection
Testcases: pspm_get_timing
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_timing_test 
\begin_inset Newline newline
\end_inset

Function: 
\begin_inset Newline newline
\end_inset

[sts, multi] = pspm_get_timing('onsets', intiming, timeunits) 
\begin_inset Newline newline
\end_inset

[sts, events] = pspm_get_timing('markervalues', markerinfo, names)
\begin_inset Newline newline
\end_inset

[sts, epochs] = pspm_get_timing('epochs', epochs) 
\begin_inset Newline newline
\end_inset

[sts, events] = pspm_get_timing('events', events)
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input arguments
\end_layout

\begin_layout Standard
Function name: invalid_inputargs(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('epochs') [missing input var]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('onsets', 'str') [no timeunits var]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('foo') [unknown format]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('onsets', intiming, 'samples') [two sessions with nonmatching
 number of conditions]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:number_of_elements_dont_match
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('onsets', intiming, 'samples') [two sessions with nonmatching
 condition names]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:event_names_dont_match
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('onsets', intiming, 'samples') [intiming.onsets{1} is no
 numeric vector]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:no_numeric_vector
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('epochs', fn_mat, 'samples') [epochs is not an integer array]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:no_integers
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('markervalues', markerinfo) [no markervalue and no name
 ]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('markervalues', markerinfo, markervalue, names) [markervalue
 is not of numeric type nor a cell array] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing('markervalues', markerinfo, markervalue, names) [markervalue
 and names are not of the same length]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Case Epochs
\end_layout

\begin_layout Standard
Function name: case_epochs(this) 
\begin_inset Newline newline
\end_inset

Description: Checks the function in ‘epochs’ mode.
 
\begin_inset Newline newline
\end_inset

Function: [sts, epochs] = pspm_get_timing('epochs', epochs) 
\end_layout

\begin_layout Subsubsection*
Test 1 (matfile input)
\end_layout

\begin_layout Standard
Input: mat file with variable: epochs = [1 4; 2 5; 3 6] 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Check if sts==1 and if the return value is equal the input array.
 
\end_layout

\begin_layout Subsubsection*
Test 2 (spm input)
\end_layout

\begin_layout Standard
Input: mat file with variable: onsets{1} = [1 2 3]';onsets{2} = [4 5 6]';
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Check if sts==1 and if the return value is equal [onsets{1}, onsets{2}].
 
\end_layout

\begin_layout Subsubsection*
Test 3 (textfile input)
\end_layout

\begin_layout Standard
Input: textfile with variable: epochs = [1 4; 2 5; 3 6] 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Check if sts==1 and if the return value is equal the input array.
 
\end_layout

\begin_layout Subsubsection*
Test 4 (matrix input)
\end_layout

\begin_layout Standard
Input: matrix: epochs = [1 4; 2 5; 3 6] 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Check if sts==1 and if the return value is equal the input array.
 
\end_layout

\begin_layout Subsubsection*
Case onsets
\end_layout

\begin_layout Standard
Function name: case_onsets(this) 
\begin_inset Newline newline
\end_inset

Description: Checks the function in ‘onsets’ mode.
 
\begin_inset Newline newline
\end_inset

Function: [sts, multi] = pspm_get_timing('onsets', intiming, timeunits)
 
\end_layout

\begin_layout Subsubsection*
Test 1
\end_layout

\begin_layout Standard
Input: mat file with the variables: 
\begin_inset Newline newline
\end_inset

names = {'name1', 'name2'}; 
\begin_inset Newline newline
\end_inset

onsets = {[1 2], [3 4]}; 
\begin_inset Newline newline
\end_inset

pmod.name = {'name3', 'name4'}; 
\begin_inset Newline newline
\end_inset

pmod.param = {[2 3], [4 5]}; 
\begin_inset Newline newline
\end_inset

pmod.poly = {2, 2}; 
\begin_inset Newline newline
\end_inset

save(fn_mat, 'names', 'onsets', 'pmod'); 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Function call: 
\begin_inset Newline newline
\end_inset

[sts, outtiming] = pspm_get_timing('onsets', fn_mat, 'samples');
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset

Check if sts==1, if onsets and names are unchanged and if 
\begin_inset Newline newline
\end_inset

outtiming.pmod.param == {[2 3], [4 9], [4 5], [16 25]} 
\end_layout

\begin_layout Subsubsection*
Test 2
\end_layout

\begin_layout Standard
Input: 
\begin_inset Newline newline
\end_inset

mat file with the variables: names = {'name1', 'name2'}; 
\begin_inset Newline newline
\end_inset

onsets = {[1 2 3], [3 4 5]}; durations = {[3 4 5]', [5 6 7]'}; 
\begin_inset Newline newline
\end_inset

pmod.name = {'name3', 'name4'}; 
\begin_inset Newline newline
\end_inset

pmod.param = {[2 3 4], [4 5 6]}; 
\begin_inset Newline newline
\end_inset

pmod.poly = {2, 1};
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Function call: 
\begin_inset Newline newline
\end_inset

[sts, outtiming] = pspm_get_timing('onsets', fn_mat, 'samples');
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset

Check if sts==1, if onsets,names and durations are unchanged and if 
\begin_inset Newline newline
\end_inset

outtiming.pmod.param == {[2 3 4], [4 9 16], [4 5 6]} 
\end_layout

\begin_layout Subsubsection*
Case events
\end_layout

\begin_layout Standard
Function name: case_events(this) 
\begin_inset Newline newline
\end_inset

Description: Checks the function in ‘events’ mode.
 
\begin_inset Newline newline
\end_inset

Function: [sts, epochs] = pspm_get_timing('events', events) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Check the function if input is a one element cell array and a multiple element
 cell array.
 Check for warnings (ID:invalid_vector_size) if elements have more than
 two columns and if not all elements have the same number of rows.
\end_layout

\begin_layout Subsection
Testcases: pspm_get_<datatype>
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
The datatype import functions are all tested in a similar way.
 The individual testclasses must inherit the class ‘pspm_get_superclass’,
 from which they inherit the main test function ‘valid_datafile’.
 They also have to implement the property ‘fhandle’, which is a function
 handle to the specific import function.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The tests are performed with the sampledata files that are listed in the
 SampleDataMasterList.docx file (as at 18.11.2013).
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Superclass: pspm_get_superclass
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testclasses: pspm_get_acq_test 
\begin_inset Newline newline
\end_inset

pspm_get_acqmat_test 
\begin_inset Newline newline
\end_inset

pspm_get_biograph_test 
\begin_inset Newline newline
\end_inset

pspm_get_biosemi_test 
\begin_inset Newline newline
\end_inset

pspm_get_biotrace_test 
\begin_inset Newline newline
\end_inset

pspm_get_brainvis_test
\begin_inset Newline newline
\end_inset

pspm_get_edf
\begin_inset Newline newline
\end_inset

pspm_get_labchartmat_ext_test 
\begin_inset Newline newline
\end_inset

pspm_get_labchartmat_in_test 
\begin_inset Newline newline
\end_inset

pspm_get_mat_test 
\begin_inset Newline newline
\end_inset

pspm_get_obs_test 
\begin_inset Newline newline
\end_inset

pspm_get_spike_test 
\begin_inset Newline newline
\end_inset

pspm_get_superclass 
\begin_inset Newline newline
\end_inset

pspm_get_txt_test 
\begin_inset Newline newline
\end_inset

pspm_get_vario_test
\begin_inset Newline newline
\end_inset

pspm_get_eyelink_test
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Function: [sts, import, sourceinfo] = pspm_get_<datatype>(datafile, import)
 
\end_layout

\begin_layout Subsubsection
Notes
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Subsubsection*
define testcases
\end_layout

\begin_layout Standard
In this method the testcases are defined and the testdata is generated (if
 needed).
 Each testcase is a cell in the cellarray ‘testcases’.
 Each testcase has the following fields:
\end_layout

\begin_layout Itemize
.pth: the path to the samplefile
\end_layout

\begin_layout Itemize
.import: the input variable
\end_layout

\begin_layout Standard
For datatypes which support blocks there has to be an additional field:
\end_layout

\begin_layout Itemize
.numofblocks 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Valid datafile
\end_layout

\begin_layout Standard
Function name: valid_datafile(this) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Description: The main test function, for tests with valid inputdata.
 It tests all testcases equally.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test if ‘sts’ is equal 1.
\end_layout

\begin_layout Enumerate
If the datatype supports blocks, test if the number of blocks is correct.
\end_layout

\begin_layout Enumerate
Test if number of elements of the returned ‘import’ variable is correct.
\end_layout

\begin_layout Enumerate
Test if each importjob has a field ‘data’, that is a numeric vector.
\end_layout

\begin_layout Enumerate
Test if each importjob has a field ‘sr’, that is a number.
\end_layout

\begin_layout Enumerate
Test if each importjob has a field ‘type’.
\end_layout

\begin_layout Enumerate
Test if all event importjobs have a field ‘marker’.
\end_layout

\begin_layout Enumerate
Test if all importjobs have duration below 1h.
\end_layout

\begin_layout Enumerate
Test if all importjobs have a samplerate between 1 and 10000 for continuous
 channels or between 10^-6 and 1 for timestamp channels.
 
\end_layout

\begin_layout Subsubsection*
invalid datafile
\end_layout

\begin_layout Standard
Function name: invalid_datafile(this) 
\begin_inset Newline newline
\end_inset

Description: The main test function, for tests with invalid inputdata.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

If the datatype supports multiple channels: Check for warning when trying
 to import a channel, that is not contained in the file ('ID:channel_not_contain
ed_in_file').
 
\end_layout

\begin_layout Subsection
Testcases: pspm_get_acq
\end_layout

\begin_layout Standard
In this section we describe the testcases specific to pspm_get_acq apart
 from generic pspm_get tests.
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_get_acq_test
\begin_inset Newline newline
\end_inset

Function: [tss, import, sourceinfo] = pspm_get_acq(datafile, import)
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
get_acq should return the exact same data as Acqknowledge exported mat file
\end_layout

\begin_layout Standard
Function name: get_acq_returns_same_data_as_acqknowledge_exported_mat(this)
\begin_inset Newline newline
\end_inset

Description: The data obtained by using pspm_get_acq should be identical
 with the data obtained by using export .mat file functionality in Acqknowledge
 software.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Load data stored in 
\family typewriter
ImportTestData/acq/impedance_acq.acq
\family default
 and 
\family typewriter
ImportTestData/acq/impedance_mat.mat
\family default
 separately.
 Then compare the first channel of 
\family typewriter
impedance_mat
\family default
 with the first channel of data obtained by calling 
\family typewriter
pspm_get_acq
\family default
 on 
\family typewriter
impedance_acq
\family default
.
\end_layout

\begin_layout Subsection
Testcases: pspm_glm
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_glm_test 
\begin_inset Newline newline
\end_inset

Function: glm = pspm_glm(model, options) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

There are seven testcase functions.
 One invalid input arguments test and test 1 to 6.
 Tests 1 to 5 are of the same kind.
 There are one or multiple testcases per test function, have a look at the
 testcase description for more information.
 In these tests only Kronecker delta functions are used as basis functions,
 furthermore all conditions, pmods and nuisance regressors are pairwise
 orthogonal.
 The data is also not down sampled and not filtered.
 With these limitations it’s easy to calculate the data vectors and the
 expected stats.
 For each testcase it is then tested:
\end_layout

\begin_layout Itemize
If numel(glm.names) has the expected value.
\end_layout

\begin_layout Itemize
If numel(glm.stats) has the expected value.
\end_layout

\begin_layout Itemize
If glm.stats has the expected value (with a tolerance of 1%).
\end_layout

\begin_layout Standard
In test 6 the default basis functions are used, and not all conditions and
 pmods are orthogonal.
 The data is down sampled and low and high pass filtered.
 In exchange the stats are not tested for correct values, just for the correct
 number of elements.
 The properties 'shiftbf' and 'norm' are TestParameters, which means that
 this testclass is parameterized.
 All functions implmementing these parameters (Test 1 to Test 5) are called
 several times with all the different values and combinations of the mentioned
 parameters.
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input arguments
\end_layout

\begin_layout Standard
Function name: invalid_input (this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="17" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) [no timeunits field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) [no timeunits var]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with model.timeunits = ‘foo’ [no valid timeunits field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with model.timing = zeros(10,2) [no valid timing field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with model.modality = 'foo' [no valid modality field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with model.channel = 'scr' [no valid channel field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with model.norm = 'no' [no valid norm field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with model.filt.down = 'none' [filt.down is not numeric]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with model.bf.fhandle = 'foohandle' [non existing bf]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_fhandle
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with numel(model.datafile) != numel(model.timing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:number_of_elements_dont_match
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with model.missing is struct [non valid missing field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with numel(model.datafile) != numel(model.missing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:number_of_elements_dont_match
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with model.nuisance is struct [non valid nuisance field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with numel(model.datafile) != numel(model.nuisance)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:number_of_elements_dont_match
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with no R variable in the nuisance file
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none" width="4cm">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm(model) with R variable in the nuisance file that has not the same
 length as the datafile
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:number_of_elements_dont_match
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Test 1
\end_layout

\begin_layout Standard
Function name: test1(this, shiftbf) 
\begin_inset Newline newline
\end_inset

Description: Basic test with one basis function, one session, no nuisance
 regressors, no missings and one condition.
 Timeunits are seconds.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testcases:
\end_layout

\begin_layout Enumerate
no pmods
\end_layout

\begin_layout Enumerate
one pmod
\end_layout

\begin_layout Enumerate
two pmods 
\end_layout

\begin_layout Subsubsection*
Test 2
\end_layout

\begin_layout Standard
Function name: test2(this, shiftbf) 
\begin_inset Newline newline
\end_inset

Description: Test with one basis function, one session, no nuisance regressors,
 no missings and two conditions.
 Timeunits are seconds.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testcases:
\end_layout

\begin_layout Enumerate
no pmods
\end_layout

\begin_layout Enumerate
first condition: no pmods; second condition: one pmod
\end_layout

\begin_layout Enumerate
first condition: one pmod; second condition: two pmods 
\end_layout

\begin_layout Subsubsection*
Test 3
\end_layout

\begin_layout Standard
Function name: test3(this, shiftbf) 
\begin_inset Newline newline
\end_inset

Description: Test with one basis function, one session, two nuisance regressors
 (1Hz cosinus, 1Hz sinus), no missings, one condition and no pmods.
 Timeunits are seconds.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testcases: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Only one testcase.
 
\end_layout

\begin_layout Subsubsection*
Test 4
\end_layout

\begin_layout Standard
Function name: test4(this, shiftbf) 
\begin_inset Newline newline
\end_inset

Description: Test with one basis function, two sessions, no nuisance regressors,
 no missings and one condition.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testcases:
\end_layout

\begin_layout Enumerate
timeunits are seconds
\end_layout

\begin_layout Enumerate
timeunits are samples
\end_layout

\begin_layout Enumerate
timeunits are markers 
\end_layout

\begin_layout Subsubsection*
Test 5
\end_layout

\begin_layout Standard
Function name: test5(this, shiftbf) 
\begin_inset Newline newline
\end_inset

Description: Test with two basis functions, one session, no nuisance regressors
 and one condition.
 Timeunits are seconds.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testcases:
\end_layout

\begin_layout Enumerate
no missings
\end_layout

\begin_layout Enumerate
with missings 
\end_layout

\begin_layout Subsubsection*
Test 6
\end_layout

\begin_layout Standard
Function name: test6(this) 
\begin_inset Newline newline
\end_inset

Description: Test with default basis function and non-orthogonal conditions
 and pmods 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testcase: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Default basis functions, no nuisance regressors, no missings, two sessions
 and two conditions.
 Timeunits are seconds.
\end_layout

\begin_layout Itemize
first condition: two pmods (with pmod(1).poly{1} = 2 and pmod(1).poly{2} =
 3)
\end_layout

\begin_layout Itemize
second condition: no pmods 
\end_layout

\begin_layout Subsubsection*
Test7:
\end_layout

\begin_layout Standard
Function name: test_extract_missing(this, cutoff, nan_percent)
\begin_inset Newline newline
\end_inset

Description: Test with one basis function, one session, no nuisance regressors,
 no missings and three conditions.
 Timeunits are seconds.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testcases: for all combinations of the test parameters cutoff and nan_percent
\end_layout

\begin_layout Itemize
glm vector stats_missing has the appropriate length according to the number
 of conditions
\end_layout

\begin_layout Itemize
percentages in glm vector stats_missing contains the expected value
\end_layout

\begin_layout Itemize
glm vector stats_exclude has the appropriate length according to the number
 of conditions
\end_layout

\begin_layout Itemize
glm vector stats_exclude contains the expected condistion which should be
 excluded 
\end_layout

\begin_layout Subsection
Testcases: pspm_hb2hp
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_hb2hp_test 
\begin_inset Newline newline
\end_inset

Function: [sts, infos] = pspm_hb2hp(fn, sr, chan, options)
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hp() [no input]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hp(2) [not a string filename]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hp('abc') [no sample rate]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hp('abc','abc') [not a string sample rate]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hp('abc',2,'abc') [not a numeric chanel]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hp(files{1},100) [call of pspm_load_data fails]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hp(files{2}, 100) [not enough points for interp1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:too_strict_limits
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hp(files{3},100,[],options) [pspm_write_channel fails]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Testcases: pspm_import
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_import_test 
\begin_inset Newline newline
\end_inset

Function: outfile = pspm_import(datafile, datatype, import, options) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input arguments
\end_layout

\begin_layout Standard
Function name: invalid_inputargs(ths) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test No.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_import(datafile, datatype) [no import variable]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_import(datafile, datatype, ‘foo’) [no cell/struct import var.]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_import(datafile, ‘foo’, import) [invalid channeltype]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_channeltype
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_import(5, datatype, import) [no char filename]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Invalid import variable structure
\end_layout

\begin_layout Standard
Function name: invalid_import_struct(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the structure of the import variable
 is invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test No.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Multiple channel, though not supported
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_import_struct
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not allowed channeltype
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_import_struct
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No sr given, though autosr is not supported
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_import_struct
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nonexistent file
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:nonexistent_file
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
One datafile
\end_layout

\begin_layout Standard
Function name: one_datafile(this) 
\begin_inset Newline newline
\end_inset

Description: Checks the function, if datafile is a string (import of one
 datafile) and all inputs are correct.
 The outfile is checked with the pspm_load_data function.
 The tests are performed with a spike samplefile and a labchartmat_in samplefile
 (to check the handling of blocks).
 
\end_layout

\begin_layout Subsubsection*
Multiple datafiles
\end_layout

\begin_layout Standard
Function name: multiple_datafiles(this) 
\begin_inset Newline newline
\end_inset

Description: Checks the function, if datafile is a cell array of strings
 (import of multiple datafiles) and all inputs are correct.
 The outfiles are tested with the pspm_load_data function.
 
\end_layout

\begin_layout Subsection
Testcases: pspm_interpolate
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_interpolate_test
\begin_inset Newline newline
\end_inset

Function: [sts, outdata] = pspm_interpolate(indata, options)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
This test class is parameterized.
 The test data is generated by the function itself and when needed, files
 will be written to datafile<variable_nr>.mat.
\end_layout

\begin_layout Subsubsection*
Test parameters
\end_layout

\begin_layout Standard
These are parameters which define what kind of data should be passed to
 pspm_interpolate and which options should be set.
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Amount
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specifies how many elements indata (for pspm_interpolate) should have.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Datatype
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specifies what type of data should be generated.
\end_layout

\begin_layout Itemize
struct - a valid data struct will be generated
\end_layout

\begin_layout Itemize
inline - a numeric vector will be generated
\end_layout

\begin_layout Itemize
file - a valid scr file will be generated
\end_layout

\begin_layout Itemize
all - all types will sequentially be generated until amount is reached
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Chans
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If datatype is not inline this specifies how many and which type of data
 channels the generated data should have.
 In a second field it also defines which of these channels should be interpolate
d (this will be passed later in options.channels).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nan method
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specifies how NaN values will be put into the data.
\end_layout

\begin_layout Itemize
start - range is 1+offset:<random number before the center>
\end_layout

\begin_layout Itemize
center - range is <radnom number before the center>:<random number after
 the center>
\end_layout

\begin_layout Itemize
end - range is <random number after the center>:end-offset
\end_layout

\begin_layout Plain Layout
The offset is 1 if 'extrap' is not defined.
 This is needed because if there is no data at the end or beginning of the
 data, the function is unable to interpolate (unless extrapolation is activated).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Extrap
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Is either true or false and activates or deactivates the extrapolation.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Interp method
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specifies the interpolation method.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Newfile
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True or false and tells the function to either create a file or add the
 data as new channel.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Overwrite
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True or false and tells the function to either overwrite an existing file
 or not.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Replace channel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True or false and tells the function to either replace the given channels
 with the interpolated data or to add the interpolated data as new channel.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="19" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test No.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate() [no arguments]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:missing_data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate({{}}) [data is not char, struct, numeric]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate({}) [data empty]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:missing_data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(struct()) [invalid struct]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(invalid_data) [file which does not exist]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:nonexistent_file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(valid_data, options) [options.channels is larger than valid_data
]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(valid_data, options) [options.channels is not numeric]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(valid_data, options) [options.method is invalid]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(valid_data, options) [options.newfile is invalid]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(valid_data, options) [options.extrapolate is invalid]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(valid_data, options) [options.overwrite is invalid]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(valid_data, options) [options.dont_ask_overwrite is invalid]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(valid_data, options) [options.replace_channels is invalid]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(invalid_data, options) [try to interpolate an events channel]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_channeltype
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(invalid_data) [try to interpolate with nan from beginning
 and without extrapolation]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:option_disabled
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(invalid_data, options) [try to interpolate with nan from
 beginning and with extrapolation]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:out_of_range
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(invalid_data) [try to interpolate with nan from end and
 without extrapolation]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:option_disabled
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate(invalid_data, options) [try to interpolate with nan from
 end and with extrapolation]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:out_of_range
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Test datatypes
\end_layout

\begin_layout Standard
Function name: test_datatypes(this, datatype, amount, chans) 
\begin_inset Newline newline
\end_inset

Description: Tries to interpolate with different datatypes, amount of data,
 channels.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Generate data with datatype, amount, 'center', chans, false
\end_layout

\begin_layout Enumerate
Test if function issues no warnings
\end_layout

\begin_layout Enumerate
Test if sts is 1
\end_layout

\begin_layout Enumerate
Test if size of outdata equals the size of the data
\end_layout

\begin_layout Enumerate
Test if channels to be interpolated have no more NaNs
\end_layout

\begin_layout Enumerate
Test if channels not to be interpolated still contain NaNs
\end_layout

\begin_layout Subsubsection*
Test interpolation variations
\end_layout

\begin_layout Standard
Function name: test_interpolation_variations(this, interp_method, extrap,
 nan_method) 
\begin_inset Newline newline
\end_inset

Description: Tries to interpolate with different interpolation methods while
 varying options.extrapolate and the nan_method.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Generate data with 'inline', 1, nan_method, {{'scr'}, []}, extrap
\end_layout

\begin_layout Enumerate
Test if function issues no warnings
\end_layout

\begin_layout Enumerate
Test if sts is 1
\end_layout

\begin_layout Enumerate
Test if size of outdata equals the size of the data
\end_layout

\begin_layout Enumerate
Test if data has no more NaNs
\end_layout

\begin_layout Standard

\series bold
\shape italic
Special case:
\series default
\shape default
 When extrapolation is on and nan_method is 'start' and interp_method is
 'previous' or nan_method is 'end' and interp_method is 'next'.
 This should issue a warning because this is not possible (e.g.
 interpolate with previous value when first NaN value is at the beginning
 of the data set).
\end_layout

\begin_layout Enumerate
Generate data as above
\end_layout

\begin_layout Enumerate
Test if function issues a warning.
\end_layout

\begin_layout Subsubsection*
Test no nan
\end_layout

\begin_layout Standard
Function name: test_no_nan(this) 
\begin_inset Newline newline
\end_inset

Description: Test whether function works even if there is nothing to interpolate.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data struct() with pspm_test_data_gen()
\end_layout

\begin_layout Enumerate
Test if function issues no warnings
\end_layout

\begin_layout Enumerate
Test if sts is 1
\end_layout

\begin_layout Enumerate
Test if size of outdata equals the size of data
\end_layout

\begin_layout Enumerate
Test if outdata equals data
\end_layout

\begin_layout Enumerate
Test if data has no NaNs
\end_layout

\begin_layout Subsubsection*
Test write
\end_layout

\begin_layout Standard
Function name: test_write(this, newfile) 
\begin_inset Newline newline
\end_inset

Description: Vary the option newfile and test whether new file is created
 correctly or data is correctly added to a new channel.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with 'file', 2, 'center', {{'scr', 'scr', 'scr'}, [1,3]} ,
 false
\end_layout

\begin_layout Enumerate
Test if function issues no warnings
\end_layout

\begin_layout Enumerate
Test if sts is 1
\end_layout

\begin_layout Enumerate
Test if size of outdata equals the size of data
\end_layout

\begin_layout Enumerate
Test if outdata does not equal data
\end_layout

\begin_layout Standard
New files only:
\end_layout

\begin_layout Enumerate
Test if new file exists
\end_layout

\begin_layout Enumerate
Load old and new file and test if size of data is equal
\end_layout

\begin_layout Enumerate
Verify that interpolated channels in the new file are NaN free
\end_layout

\begin_layout Standard
Added to existing file only:
\end_layout

\begin_layout Enumerate
Test if all returned values are numeric (new channel ids)
\end_layout

\begin_layout Enumerate
Verify that the added channels are NaN free
\end_layout

\begin_layout Enumerate
Test if added channels match the size of the original data channels
\end_layout

\begin_layout Subsubsection*
Test overwrite
\end_layout

\begin_layout Standard
Function name: test_overwrite(this, overwrite) 
\begin_inset Newline newline
\end_inset

Description: Vary overwrite and test whether files are overwritten or not.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Generate data with 'file', 2, 'center', {{'scr', 'scr', 'scr'}, [1,2,3]},
 false
\end_layout

\begin_layout Enumerate
Create files with expected filenames
\end_layout

\begin_layout Enumerate
Test if function issues no warning
\end_layout

\begin_layout Enumerate
Test if sts is 1
\end_layout

\begin_layout Enumerate
According to overwrite test if file has been overwritten or not
\end_layout

\begin_layout Subsubsection*
Test replace channel
\end_layout

\begin_layout Standard
Function name: test_replace_channel(this, replace_channels)
\begin_inset Newline newline
\end_inset

Description: Vary replace_channel and test wether channels are overwritten
 or not.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Generate data with 'file', 2, 'center', {{'scr', 'scr', 'scr'}, [1,2,3]}
 , false
\end_layout

\begin_layout Enumerate
Test if function issues no warnings
\end_layout

\begin_layout Enumerate
Test if sts is 1
\end_layout

\begin_layout Enumerate
Test if size of outdata equals the size of data
\end_layout

\begin_layout Enumerate
Test if outdata does not equal data
\end_layout

\begin_layout Enumerate
According to replace_channel test whether returned channel ids correspond
 to replaced channels or correspond to added channels.
\end_layout

\begin_layout Subsubsection
Other methods
\end_layout

\begin_layout Subsubsection*
Generate data
\end_layout

\begin_layout Standard
Has all of the Test parameters as parameter implemented and accordingly
 generates the data.
 It calls put nan to insert NaN values into the data.
 The generated data is returned as data to the calling function.
 Also all return values are stored in the property testdata (for cleanup
 data).
\end_layout

\begin_layout Subsubsection*
Cleanup data
\end_layout

\begin_layout Standard
Sits in MethodTeardown and is called once the test class has finished all
 tests.
 It then removes all the datafiles which can be found in the property 'testdata'.
\end_layout

\begin_layout Subsubsection*
Verify NaN free
\end_layout

\begin_layout Standard
Helper function to verify whether the data is NaN free or not.
 It copes with two states.
 Either a channel should have been interpolated, then it shouldn't contain
 any NaN values or a channel should not have been interpolated, then the
 channel should still contain NaN values.
\end_layout

\begin_layout Subsection
Testcases: pspm_load1
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_load1_test
\begin_inset Newline newline
\end_inset

Function: [sts, data, mdltype] = pspm_load1(fn, action, savedata, options)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
The datafile fn is referring to a datafile which was generated with pspm_load1_t
est.generate_testdata(this).
 The function is part of the test object and generates models for all of
 the available model types (defined in settings.first).
 The models are created with data generated with pspm_testdata_gen.
 Two files belong to each model: model_<modeltype><variable nr.>.mat (fn)
 and dummy_<modeltype><variable_nr>.mat (dfn).
 The model file on the one hand is the actual model file while on the other
 hand, the dummy file is a copy of the model file, used by the test to manipulat
e the test data.
\end_layout

\begin_layout Subsubsection*
Generated aquisition data (pspm_testdata_gen)
\end_layout

\begin_layout Standard

\family typewriter
data{1}.chantype = 'scr'; 
\begin_inset Newline newline
\end_inset

data{2}.chantype = 'hb';
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\family default
The duration of the channels is 100s.
\end_layout

\begin_layout Subsubsection*
Generated GLM model
\end_layout

\begin_layout Standard

\family typewriter
model.timing{1}.names = {'a';'b';'c'}; 
\begin_inset Newline newline
\end_inset

model.timing{1}.onsets = {[10, 20, 30], [15, 25, 35], [18, 28, 38]}; 
\end_layout

\begin_layout Subsubsection*
Generated DCM & SF model
\end_layout

\begin_layout Standard

\family typewriter
model.timing{1} = [10,20; 23,38; 40,70;]; 
\begin_inset Newline newline
\end_inset

model.condition{1}.name = {'a';'b'}; 
\begin_inset Newline newline
\end_inset

model.condition{1}.index = [1;2];
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid model structure (general)
\end_layout

\begin_layout Standard
Function: invalid_model_tructure_general(this)
\begin_inset Newline newline
\end_inset

Description: Tries to pass invalid data structures, and tests for certain
 warnings.
 Applys to all available modeltypes.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
empty model file
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing field 'modelfile'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing field 'modeltype'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing field 'modality'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing field 'stats'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing field 'names'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Invalid model structure (specific)
\end_layout

\begin_layout Standard
Function: invalid_model_structure_general(this)
\begin_inset Newline newline
\end_inset

Description: Tries to pass invalid data structures, and tests for certain
 warnings.
 Model specific.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests for GLM:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
field 'stats' is not an n x 1 vector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
unequal amount of numbers and parameters in field 'stats'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.zscored = 1 & action = 'cond'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests for DCM & SF:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
unequal size for fields in 'trlnames' and rows in 'stats'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing field 'trlnames'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
unequal size for fields in 'names' and columns in 'stats'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
action = 'recon'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests for DCM:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.zscored = 1 & pspm_load1(dfn, 'none', {}, options)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.zscored = 1 & pspm_load1(dfn, 'cond', {}, options)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.zscored = 1 & pspm_load1(dfn, 'stats', {}, options)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests for GLM & SF:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.zscored = 1 & pspm_load1(dfn, 'cond', {}, options)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Action 'none'
\end_layout

\begin_layout Standard
Function: test_action_none(this)
\begin_inset Newline newline
\end_inset

Description: Test for all modeltypes if action 'none' matches the expected
 behaviour.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Test if returned data is empty.
\end_layout

\begin_layout Subsubsection*
Action 'stats'
\end_layout

\begin_layout Standard
Function: test_action_stats(this)
\begin_inset Newline newline
\end_inset

Description: Test for all modeltypes if action 'stats' matches the expected
 behaviour.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests for all:
\end_layout

\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Returned data contains field 'stats'
\end_layout

\begin_layout Enumerate
Returned data contains field 'names'
\end_layout

\begin_layout Standard
Tests for DCM & SF:
\end_layout

\begin_layout Enumerate
Returned data contains field 'trlnames'
\end_layout

\begin_layout Enumerate
Returned data contains field 'condnames'
\end_layout

\begin_layout Subsubsection*
Action 'cond'
\end_layout

\begin_layout Standard
Function: test_action_cond(this)
\begin_inset Newline newline
\end_inset

Description: Test for all modeltypes if action 'cond' matches the expected
 behaviour.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests for all:
\end_layout

\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Returned data contains field 'stats'
\end_layout

\begin_layout Enumerate
Returned data contains field 'names'
\end_layout

\begin_layout Standard
Tests for DCM & SF:
\end_layout

\begin_layout Enumerate
Returned data contains field 'trlnames'
\end_layout

\begin_layout Enumerate
Returned data contains field 'condnames'
\end_layout

\begin_layout Subsubsection*
Action 'recon'
\end_layout

\begin_layout Standard
Function: test_action_recon(this)
\begin_inset Newline newline
\end_inset

Description: Test for all modeltypes if action 'recon' matches the expected
 behaviour.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests for GLM:
\end_layout

\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Returned data contains field 'stats'
\end_layout

\begin_layout Enumerate
Returned data contains field 'names'
\end_layout

\begin_layout Standard
Tests for DCM & SF already done in specific structure test.
\end_layout

\begin_layout Subsubsection*
Action 'savecon'
\end_layout

\begin_layout Standard
Function: test_action_savecon(this)
\begin_inset Newline newline
\end_inset

Description: Test for all modeltypes if action 'savecon' matches the expected
 behaviour.
 Generates a number, passes it within the 'savecon' struct and tests if
 the number is returned correctly.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Returned data contains field 'con'
\end_layout

\begin_layout Enumerate
Field 'con' contains field 'test'
\end_layout

\begin_layout Enumerate
Field 'con.test' is equal to the randomly generated number
\end_layout

\begin_layout Subsubsection*
Action 'con'
\end_layout

\begin_layout Standard
Function: test_action_con(this)
\begin_inset Newline newline
\end_inset

Description: Test for all modeltypes if action 'con' matches the expected
 behaviour.
 Tests if the in 'savecon' generated field test is still returned.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Returned data contains field 'con'
\end_layout

\begin_layout Enumerate
Field 'con' contains field 'test'.
\end_layout

\begin_layout Subsubsection*
Action 'all'
\end_layout

\begin_layout Standard
Function: test_action_all(this)
\begin_inset Newline newline
\end_inset

Description: Test for all modeltypes if action 'all' matches the expected
 behaviour.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Returned data is not empty.
\end_layout

\begin_layout Subsubsection*
Action 'save'
\end_layout

\begin_layout Standard
Function: test_action_save(this)
\begin_inset Newline newline
\end_inset

Description: Test for all modeltypes if action 'save' matches the expected
 behaviour.
 Test with options.overwrite = 1.
 Generates random number and writes it into field 'test' in model structure.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Model structure contains field 'test'
\end_layout

\begin_layout Enumerate
Field 'test' in model structure equals to the randomly generated number.
\end_layout

\begin_layout Subsubsection*
Options
\end_layout

\begin_layout Standard
Function: test_options(this)
\begin_inset Newline newline
\end_inset

Description: Test for all modeltypes if options passed with options structure
 cause the expected behaviour.
 Does also work with a randomly generated number in <model struct>.test to
 test whether the data is written or not.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests for all: 
\end_layout

\begin_layout Enumerate
dont_ask_overwrite = 1 & overwrite = 0 returns warning ID:not_saving_data
 and field 'test' in model struct does not match generated number
\end_layout

\begin_layout Enumerate
dont_ask_overwrite = 1 & overwrite = 1 field 'test' in returned model struct
 does match generated number
\end_layout

\begin_layout Standard
Tests for DCM (with dont_ask_overwrite = 1 & overwrite = 1):
\end_layout

\begin_layout Enumerate
zscored = 0 & action = 'stats'
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Returned data.stats is not zscored
\end_layout

\end_deeper
\begin_layout Enumerate
zscored = 1 & action = 'stats'
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Returned data.stats is zscored
\end_layout

\end_deeper
\begin_layout Enumerate
zscored = 0 & action = 'cond'
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Basic function test
\end_layout

\begin_layout Enumerate
Returned data is different when callng with zscroed = 1 & action = 'cond'
 (should not zscore, when not specified)
\end_layout

\end_deeper
\begin_layout Subsubsection
Other methods
\end_layout

\begin_layout Subsubsection*
Remove testdata
\end_layout

\begin_layout Standard
Removes all the test data generated by the test class.
 It is called once the class is finished with testing.
 
\end_layout

\begin_layout Subsubsection*
Basic function test
\end_layout

\begin_layout Standard
Is called in each test after the tested function has been called.
 It does two checks:
\end_layout

\begin_layout Itemize
Returned modeltype matches the modeltype stored in the returned model structure
\end_layout

\begin_layout Itemize
Returned status (sts) equals 1
\end_layout

\begin_layout Subsection
Testcases: pspm_load_data
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_load_data_test 
\begin_inset Newline newline
\end_inset

Function: [sts, infos, data, filestruct] = pspm_load_data(fn, chan) 
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
If not otherwise declared, the input variable fn is referring to a datafile
 which was generated with pspm_testdata_gen and consists out of the following
 channels: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\family typewriter
data{1}.chantype = 'scr'; 
\begin_inset Newline newline
\end_inset

data{2}.chantype = 'marker'; 
\begin_inset Newline newline
\end_inset

data{3}.chantype = 'hr'; 
\begin_inset Newline newline
\end_inset

data{4}.chantype = 'hb'; 
\begin_inset Newline newline
\end_inset

data{5}.chantype = 'marker'; 
\begin_inset Newline newline
\end_inset

data{6}.chantype = 'resp'; 
\begin_inset Newline newline
\end_inset

data{7}.chantype = 'scr';
\family default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The duration of the channels is 10s.
 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input arguments
\end_layout

\begin_layout Standard
Function name: invalid_inputargs(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_data [no filename]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_data(1) [no char filename]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_data(fn, -1) [neg.
 channel no]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_data(fn, ‘foobar’) [no allowed ch type]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_data(fn, foo) [missing field in foo struct]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_data(fn, {1}) [invalid channel option]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_data(struct) [struct has no infos field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_data(fn, 250) [nonexisting channel]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Invalid datafile
\end_layout

\begin_layout Standard
Function name: invalid_datafile(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the datafile is invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test No.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
non-existent datafile
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:nonexistent_file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing ‘infos’ variable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing ‘data’ variable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing ‘data’ field in ‘data{2}’
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing ‘header’ field ‘data{3}’
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
missing ‘sr’ field in ‘data{7}.header’
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data{4} is a nx2 vector (instead of a nx1 vector)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the length of data{1}.data is incompatible with the duration
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
An entry of data{2}.data is larger than ‘duration’
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data{5} has an non-existent chantype (‘scanner’)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
duplicates (9) with struct chan input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Return all channels 
\end_layout

\begin_layout Standard
Function name: valid_datafile_0(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks the function, if all channels shall be returned (chan
 = 0).
 
\end_layout

\begin_layout Subsubsection*
Return all channels (struct input) 
\end_layout

\begin_layout Standard
Function name: valid_datafile_1(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks the function, if all channels shall be returned (chan
 = 0) and the input is a struct.
 
\end_layout

\begin_layout Subsubsection*
Return one channel
\end_layout

\begin_layout Standard
Function name: valid_datafile_2(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks the function, if only one channel shall be returned
 (chan = 2).
 
\end_layout

\begin_layout Subsubsection*
Return one channel
\end_layout

\begin_layout Standard
Function name: valid_datafile_3(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks the function, if multiple channels shall be returned
 (chan = [3 5]).
 
\end_layout

\begin_layout Subsubsection*
Return scr channels
\end_layout

\begin_layout Standard
Function name: valid_datafile_4(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks the function, if only the scr channels shall be returned.
 
\end_layout

\begin_layout Subsubsection*
Return event channels
\end_layout

\begin_layout Standard
Function name: valid_datafile_5(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks the function, if only the event channels shall be returned.
 
\end_layout

\begin_layout Subsubsection*
Save data 
\end_layout

\begin_layout Standard
Function name: valid_datafile_6(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks the function, if data is to be saved (chan struct).
 
\end_layout

\begin_layout Subsection
Testcases: pspm_pp
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_pp_test 
\begin_inset Newline newline
\end_inset

Function: newfile = pspm_pp('median', datafile, n, channelnumber) or newfile
 = pspm_pp('butter', datafile, freq, channelnumber) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pp('butter', 'file') [no freq]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pp('foo', 'file', 100) [no valid first argument]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pp('butter', 'file', 19) [freq below 20]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Median test
\end_layout

\begin_layout Standard
Function name: median_test(this) 
\begin_inset Newline newline
\end_inset

Description: Checks medianfilter functionality 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Setup: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testfile with 3 channels (scr, hb, scr).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Filter one channel [Input: newfile = pspm_pp('median', testfile, 50, 3)]
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
i.
 Check if sts == 1, when data is loaded with pspm_load_data.
 
\end_layout

\begin_layout Standard
ii.
 Check if newfile has the same number of channels as testfile
\end_layout

\end_deeper
\begin_layout Enumerate
Filter multiple channel [Input: newfile = pspm_pp('median', testfile, 50)]
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
i.
 Check if sts == 1, when data is loaded with pspm_load_data.
 
\end_layout

\begin_layout Standard
ii.
 Check if newfile has the same number of channels as testfile 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Butterworth filter test
\end_layout

\begin_layout Standard
Function name: butter_test(this) 
\begin_inset Newline newline
\end_inset

Description: Checks Butterworth filter functionality 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Setup: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Testfile with 3 channels (scr, hb, scr).
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Filter one channel [Input: newfile = pspm_pp('butter', testfile, 40, 3)]
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
i.
 Check if sts == 1, when data is loaded with pspm_load_data.
 
\end_layout

\begin_layout Standard
ii.
 Check if newfile has the same number of channels as testfile
\end_layout

\end_deeper
\begin_layout Enumerate
Filter multiple channel [Input: newfile = pspm_pp('butter', testfile, 40)]
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
i.
 Check if sts == 1, when data is loaded with pspm_load_data.
 
\end_layout

\begin_layout Standard
ii.
 Check if newfile has the same number of channels as testfile 
\end_layout

\end_deeper
\begin_layout Subsection
Testcases: pspm_prepdata
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_prepdata_test 
\begin_inset Newline newline
\end_inset

Function: [sts, outdata, newsr] = pspm_prepdata(data, filt) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_prepdata([1 NaN 3], filt) [NaN values in data]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_prepdata([1 2 3]) [no filt variable]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_prepdata(data, filt) [filt has no hporder field]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_prepdata('foo', filt) [no numeric data]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_prepdata(data, filt) [with lpfreq = 'foo' (not valid)]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Hipassfilter test
\end_layout

\begin_layout Standard
Function name: hipassfilter_test(this) 
\begin_inset Newline newline
\end_inset

Description: Checks hipassfilter functionality (without downsampling) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Setup: 
\begin_inset Newline newline
\end_inset

data = rand(1000,1);
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

filt.sr = 100; 
\begin_inset Newline newline
\end_inset

filt.lpfreq = 'none'; 
\begin_inset Newline newline
\end_inset

filt.lporder = 1; 
\begin_inset Newline newline
\end_inset

filt.hpfreq = 20; 
\begin_inset Newline newline
\end_inset

filt.hporder = 1; 
\begin_inset Newline newline
\end_inset

filt.down = 'none';
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Unidirectional tests [filt.direction = ‘uni’] 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
i.
 Check if sts == 1 
\end_layout

\begin_layout Standard
ii.
 Check if newsr == filt.sr 
\end_layout

\begin_layout Standard
iii.
 Check if outdata is empty 
\end_layout

\begin_layout Standard
iv.
 Check if length(outdata) == length(data) 
\end_layout

\end_deeper
\begin_layout Enumerate
Unidirectional tests [filt.direction = ‘bi’] 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
i.
 Check if sts == 1 
\end_layout

\begin_layout Standard
ii.
 Check if newsr == filt.sr 
\end_layout

\begin_layout Standard
iii.
 Check if outdata is empty 
\end_layout

\begin_layout Standard
iv.
 Check if length(outdata) == length(data) 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Lowpassfilter test
\end_layout

\begin_layout Standard
Function name: lowpassfilter_test(this) 
\begin_inset Newline newline
\end_inset

Description: Checks hipassfilter functionality (without downsampling) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Setup: 
\begin_inset Newline newline
\end_inset

data = rand(1000,1);
\begin_inset Newline newline
\end_inset

filt.sr = 100; 
\begin_inset Newline newline
\end_inset

filt.lpfreq = 40; 
\begin_inset Newline newline
\end_inset

filt.lporder = 1; 
\begin_inset Newline newline
\end_inset

filt.hpfreq = 'none'; 
\begin_inset Newline newline
\end_inset

filt.hporder = 1; 
\begin_inset Newline newline
\end_inset

filt.down = 'none';
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Same tests as in hipassfilter_test.
 Additionally there is a check for a warning if filt.lpfreq is higher (or
 equal) than the nyquist frequency: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_prepdata(data, filt) [filt.sr = 100; filt.lpfreq = 60]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:no_low_pass_filtering
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Bandpassfilter test
\end_layout

\begin_layout Standard
Function name: bandpassfilter_test(this) 
\begin_inset Newline newline
\end_inset

Description: Checks bandpassfilter functionality (without downsampling)
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Setup: 
\begin_inset Newline newline
\end_inset

data = rand(1000,1);
\begin_inset Newline newline
\end_inset

filt.sr = 200;
\begin_inset Newline newline
\end_inset

filt.lpfreq = 99; 
\begin_inset Newline newline
\end_inset

filt.lporder = 1; 
\begin_inset Newline newline
\end_inset

filt.hpfreq = 20; 
\begin_inset Newline newline
\end_inset

filt.hporder = 1; 
\begin_inset Newline newline
\end_inset

filt.down = 'none';
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: Same tests as in hipassfilter_test.
 
\end_layout

\begin_layout Subsubsection*
Integer samplerate ratio downsampling test
\end_layout

\begin_layout Standard
Function name: int_sr_ratio_downsample_test(this) 
\begin_inset Newline newline
\end_inset

Description: Checks downsampling functionality, if the ratio between filt.sr
 and filt.down is an integer.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Setup: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

ratio = 2; %ratio between filt.sr and filt.down
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

filt.down = 100; 
\begin_inset Newline newline
\end_inset

filt.sr = ratio 
\begin_inset Newline newline
\end_inset

filt.down; filt.lpfreq = 40; 
\begin_inset Newline newline
\end_inset

filt.lporder = 1; 
\begin_inset Newline newline
\end_inset

filt.hpfreq = 'none'; 
\begin_inset Newline newline
\end_inset

filt.hporder = 1; 
\begin_inset Newline newline
\end_inset

filt.direction = 'uni';
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

data = rand(filt.sr * 10,1);
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Check if sts == 1
\end_layout

\begin_layout Enumerate
Check if newsr == filt.down
\end_layout

\begin_layout Enumerate
Check if outdata is empty
\end_layout

\begin_layout Enumerate
Check if ratio*length(outdata) == length(data) 
\end_layout

\begin_layout Subsection
Testcases: pspm_process_illuminance
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_process_illuminance_test
\begin_inset Newline newline
\end_inset

Function: [sts, out] = pspm_process_illuminance(ldata, sr, options)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
This test class is parameterized.
 The test data is generated by the function itself and when needed, files
 will be written to datafile<variable_nr>.mat.
\end_layout

\begin_layout Subsubsection*
Test parameters
\end_layout

\begin_layout Standard
These are parameters which define what kind of data should be passed to
 pspm_process_illuminance and which options should be set.
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
bf_dur
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines the duration of the basis function.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
bf_offset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines the offset of the basis function.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
dur
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines the duration of the generated dataset.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
sr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines the samplerate of the generated dataset.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
n_times
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines how many datasets should be generated.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
mode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines the whether the dataset should be written to a file, kept as inline
 variable or should be a mix of both.
 Can be either 'file', 'inline' or 'mixed'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
overwrite
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines whether existing files should be overwritten or not.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="17" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test No.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance() [no arguments]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance([]) [empty data]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:missing_data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance(1:10) [missing samplerate]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance(1:10, 'a') [invalid ssamplerate]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10}, 1) [cell, no cell]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance(1:10, {1}) [no cell, cell]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10, 10:10}, {1}) [different sized cells]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10, 'a'},{1,2}) [invalid file]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:non_existent_file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10, 1:10}, {1, 'a'}) [invalid samplerate]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10}, {1}, 'o') [wrong options]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10}, {1}, opt)[wrong transfer settings]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10}, {1}, opt)[wrong duration]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10}, {1}, opt)[wrong offset]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10}, {1}, opt)[wrong outputfile]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10}, {1}, opt)[format of ldata and opt.fn differs]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance({1:10}, {1}, opt)[opt.overwrite is not boolean]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Test options
\end_layout

\begin_layout Standard
Function name: test_options(this, sr, dur, bf_dur, bf_offset) 
\begin_inset Newline newline
\end_inset

Description: Tries out different combination options to process the generated
 illuminance data.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Generate data with sr and dur
\end_layout

\begin_layout Enumerate
Set options according to bf_dur and bf_offset
\end_layout

\begin_layout Enumerate
Set expected warning according to sr*dur and sr*bf_dur
\end_layout

\begin_deeper
\begin_layout Enumerate
expect empty data if sr*dur < 1
\end_layout

\begin_layout Enumerate
expect invalid_input if sr*bf_dur < 1
\end_layout

\begin_layout Enumerate
otherwise expect no warning
\end_layout

\end_deeper
\begin_layout Enumerate
Test if issued warning equals expected warning
\end_layout

\begin_layout Enumerate
Test if sts equals expected value
\end_layout

\begin_layout Enumerate
Test if amount of data elements of input and output data is equal
\end_layout

\begin_layout Subsubsection*
Test multi
\end_layout

\begin_layout Standard
Function name: test_multi(this, n_times, mode) 
\begin_inset Newline newline
\end_inset

Description: Generates n sets of illuminance data and passes it to pspm_process_
illuminance.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Generate data with 10 (sr), 100 (dur), n_times (amount), mode
\end_layout

\begin_layout Enumerate
Test if pspm_process_illuminance issues no warning
\end_layout

\begin_layout Enumerate
Test if sts is 1
\end_layout

\begin_layout Enumerate
For n_times == 1, test if out has 10*100 data points
\end_layout

\begin_layout Enumerate
for n_times 
\begin_inset space \space{}
\end_inset

~= 1, test if output has same size as input
\end_layout

\begin_layout Subsubsection*
Test overwrite
\end_layout

\begin_layout Standard
Function name: test_overwrite(this, overwrite) 
\begin_inset Newline newline
\end_inset

Description: Generate illuminance file and test overwrite behaviour.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Generate data with 10 (sr), 100 (dur), 1 (amount), 'file'
\end_layout

\begin_layout Enumerate
Test if pspm_process_illuminance issues no warning
\end_layout

\begin_layout Enumerate
Test if sts equals 1
\end_layout

\begin_layout Enumerate
Test if existing file was overwriten or not
\end_layout

\begin_layout Subsubsection
Other methods
\end_layout

\begin_layout Subsubsection*
Generate lx
\end_layout

\begin_layout Standard
Has some of the Test parameters as parameter implemented and accordingly
 generates the lx data.
 According to the calling arguments the output is a cell of files and data
 vectors.
 All generated files will be stored in the property 'datafiles'.
 They will be removed once all tests have finished.
\end_layout

\begin_layout Subsubsection*
Cleanup
\end_layout

\begin_layout Standard
Located in MethodTeardown and is called once the test class has finished
 all tests.
 It then removes all the datafiles which can be found in the property 'datafiles
'.
\end_layout

\begin_layout Subsection
Testcases: pspm_pulse_convert
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_pulse_convert_test
\begin_inset Newline newline
\end_inset

Function: wavedata = pspm_pulse_convert(pulsedata, resamplingrate, samplingrate)
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(testCase)
\begin_inset Newline newline
\end_inset

Description: Pass invalid input arguments and test if the error message
 is correct.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pulse_convert()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pulse_convert(10^-3 * (1:10000)')
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pulse_convert(10^-3 * (1:10000)', 10000)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Valid input
\end_layout

\begin_layout Standard
Function name: valid_input(testCase)
\begin_inset Newline newline
\end_inset

Description: Pass generated, valid data and test if function issues no warning.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Test function without downsampling the data
\end_layout

\begin_layout Enumerate
Test function with downsampling the data
\end_layout

\begin_layout Subsection
Testcases: pspm_ren
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_ren_test 
\begin_inset Newline newline
\end_inset

Function: out_newfilename = pspm_ren(filename, newfilename) 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input (this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ren('fn') [no newfilename]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ren({'fn1', 'fn2'}, {'rfn1', 'rfn2', 'rfn3'}) [non same size cell arrays]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Char Valid Input
\end_layout

\begin_layout Standard
Function name: char_valid_input (this) 
\begin_inset Newline newline
\end_inset

Description: Checks the function if the input variables are of type char.
 It uses pspm_load_data to check the files.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Check if out_newefilename = newfilename
\end_layout

\begin_layout Enumerate
Check if sts==1 (of pspm_load_data output)
\end_layout

\begin_layout Enumerate
Check if the field ‘infos.rendata’ exists
\end_layout

\begin_layout Enumerate
Check if the field ‘infos.newname’ exists
\end_layout

\begin_layout Enumerate
Check if the original file has been deleted 
\end_layout

\begin_layout Subsubsection*
Cell Valid Input
\end_layout

\begin_layout Standard
Function name: cell_valid_input (this) 
\begin_inset Newline newline
\end_inset

Description: Checks the function if the input variables are of type cell.
 It uses pspm_load_data to check the files.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The inputs are two-element cell arrays.
 For both elements the same tests as in the char_valid_input function are
 performed individually.
\end_layout

\begin_layout Subsection
Testcases: pspm_resp_pp
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_resp_pp_test
\begin_inset Newline newline
\end_inset

Function: sts = pspm_resp_pp(fn, sr, chan, options)
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Regression Test against Revision r660
\end_layout

\begin_layout Standard
Function name: compare_results_to_results_obtained_from_r660_version(this)
\begin_inset Newline newline
\end_inset

Description: In r660, there was a bug found in pspm_resp_pp that caused
 it to crash with index out of bounds error on inputs containing some edgecase.
 This test specifically checks whether the fixed version returns the same
 results as the version before the bugfix on data that didn't cause a crash.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Check if the returned channel types have the same name and ordering
\end_layout

\begin_layout Enumerate
Check if the returned data is the same
\end_layout

\begin_layout Subsection
Testcases: pspm_split_sessions
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_split_sessions_test 
\begin_inset Newline newline
\end_inset

Properties: expected_number_of_files = 3; 
\begin_inset Newline newline
\end_inset

Function: newdatafile = pspm_split_sessions(datafile, markerchannel, options)
 
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
For the tests a testdatafile with three channels is used (duration is 100s).
 The markerchannel data is: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

data = [1 4 9 12 30 31 34 41 43 59 65 72 74 80 89 96]' 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Hence if MAXSN=10 & BRK2NORM=3 (default values) the datafiles should be
 split into 3 files.
 If different values are being used, update the property ‘expected_number_of_fil
es’ of the testclass object accordingly.
 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input (this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_split_sessions() [no filename]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_split_sessions (2) [no string filename]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_split_sessions (‘fn’, ‘foo’) [no numeric marker channel no.]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
One datafile
\end_layout

\begin_layout Standard
Function name: one_datafile(this) 
\begin_inset Newline newline
\end_inset

Description: Checks the function if the variable ‘datafile’ is of type char
 (one datafile).
 The markerchannel number is not assigned explicitly.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Check if the file has been split into ‘expected_number_of_files’ files For
 each output file the following tests are performed:
\end_layout

\begin_layout Enumerate
Check if sts == 1, when data is loaded with pspm_load_data.
\end_layout

\begin_layout Enumerate
Check if number of channels is correct.
\end_layout

\begin_layout Enumerate
Check it the field infos.slitdate exists
\end_layout

\begin_layout Enumerate
Check if the field infos.splitsn exists
\end_layout

\begin_layout Enumerate
Check if the field infos.splitfile exists.
 
\end_layout

\begin_layout Subsubsection*
Multiple datafiles
\end_layout

\begin_layout Standard
Function name: multiple_datafiles(this) 
\begin_inset Newline newline
\end_inset

Description: Checks the function if the variable ‘datafile’ is of type cell
 (two datafiles).
 The markerchannel number is assigned explicitly.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

For both datafiles the same tests as in the one_datafile function are performed
 individually.
 Additionally it is tested if the number of input files does match the number
 of output files.
 
\end_layout

\begin_layout Subsection
Testcases: pspm_trim
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_trim_test 
\begin_inset Newline newline
\end_inset

Function: newdatafile=pspm_trim(datafile, from, to, reference, options)
 
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Standard
If not otherwise declared, the input variable fn is referring to a datafile
 which was generated with pspm_testdata_gen and consists of the following
 channels: 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

data{1}.chantype = 'scr'; 
\begin_inset Newline newline
\end_inset

data{2}.chantype = 'marker'; 
\begin_inset Newline newline
\end_inset

data{3}.chantype = 'hr'; 
\begin_inset Newline newline
\end_inset

data{4}.chantype = 'hb'; 
\begin_inset Newline newline
\end_inset

data{5}.chantype = 'marker'; 
\begin_inset Newline newline
\end_inset

data{6}.chantype = 'resp'; 
\begin_inset Newline newline
\end_inset

data{7}.chantype = 'scr';
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The duration of the data recording is 10s.
 
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input arguments 
\end_layout

\begin_layout Standard
Function name: invalid_inputargs(testCase) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_trim(testCase.fn, [1 2], 5, 'marker') [invalid from parameter]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_trim(testCase.fn, 0, 'bla', 'marker') [invalid to parameter]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_trim(testCase.fn, 0, '[]', 'marker') [invalid to parameter]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_trim(fn, 0, 5) [no reference]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_trim(fn, 0, 5, 6) [no char or 2-element numeric reference]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_trim(fn, 0, 5, ‘bla’) [invalid char reference]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_trim(fn, 0, 5, [-1 5]) [invalid numeric start reference]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_trim(fn, 0, 5, [5 4]) [invalid numeric start/end reference]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Reference = ‘marker’ tests
\end_layout

\begin_layout Standard
Function name: marker_tests(testCase) 
\begin_inset Newline newline
\end_inset

Description: A wrapper function for tests with reference = ‘marker’.
 It executes the methods markertest_k, where the testcases are defined.
 
\end_layout

\begin_layout Subsubsection*
markertest_1
\end_layout

\begin_layout Standard
Description: from and to are set so that the trimming points are out of
 the range [0,duration].
 Hence the data should not be trimmed.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Expected warning: ID: marker_out_of_range 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: pspm_trim(fn, -20, 20, ’marker’) 
\end_layout

\begin_layout Subsubsection*
markertest_2 
\end_layout

\begin_layout Standard
Description: from and to are set so that the trimming points are exactly
 (0, duration).
 Hence the data should not be trimmed.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: from = -1 * marker(1) to = duration - marker(end) pspm_trim(fn, from,
 to, ’marker’) 
\end_layout

\begin_layout Subsubsection*
markertest_3 
\end_layout

\begin_layout Standard
Description: from and to are set so that the trimming points in the range
 [0,duration].
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: pspm_trim(fn, 1, -2, ’marker’) 
\end_layout

\begin_layout Subsubsection
Reference = ‘file’ tests
\end_layout

\begin_layout Standard
Function name: file_tests(testCase) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Description: A wrapper function for tests with reference = ‘file’.
 It executes the methods filetest_k, where the testcases are defined.
 
\end_layout

\begin_layout Subsubsection*
filetest_1
\end_layout

\begin_layout Standard
Description: from and to are set so that the trimming points are out of
 the range [0,duration].
 Hence the data should not be trimmed.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Expected warning: ID: marker_out_of_range 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: pspm_trim(fn, -12.5, 50, ’marker’) 
\end_layout

\begin_layout Subsubsection*
filetest_2
\end_layout

\begin_layout Standard
Description: from and to are set so that the trimming points are exactly
 (0, duration).
 Hence the data should not be trimmed.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: pspm_trim(fn, 0 , duration, ’marker’) 
\end_layout

\begin_layout Subsubsection*
filetest_3
\end_layout

\begin_layout Standard
Description: from and to are set so that the trimming points in the range
 [0,duration].
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: pspm_trim(fn,2.1, duration – 2.5, ’marker’) 
\end_layout

\begin_layout Subsubsection*
Numeric reference tests
\end_layout

\begin_layout Standard
Function name: num_tests(testCase) 
\begin_inset Newline newline
\end_inset

Description: A wrapper function for tests with reference = [a b] (a, b are
 two integers with a<b).
 It executes the methods markertest_k, where the testcases are defined.
 
\end_layout

\begin_layout Subsubsection*
numtest_1
\end_layout

\begin_layout Standard
Description: from and to are set so that the trimming points are out of
 the range [0,duration].
 Hence the data should not be trimmed.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Expected warning: ID: marker_out_of_range 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: pspm_trim(fn, -20, 20, [2 14]) 
\end_layout

\begin_layout Subsubsection*
numtest_2
\end_layout

\begin_layout Standard
Description: from and to are set so that the trimming points are exactly
 (0, duration).
 Hence the data should not be trimmed.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: from = -1 * marker(3) to = duration - marker(8) pspm_trim(fn, from,
 to, [3 8]) 
\end_layout

\begin_layout Subsubsection*
numtest_3
\end_layout

\begin_layout Standard
Description: from and to are set so that the trimming points in the range
 [0,duration].
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: pspm_trim(fn, -1.5, 2, [2 7]) 
\end_layout

\begin_layout Subsubsection*
numtest_4
\end_layout

\begin_layout Standard
Description: Second reference point is out of the marker range; from is
 set to ‘none’.
 Hence the data should not be trimmed.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Expected warning: ID: marker_out_of_range 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Input: pspm_trim(fn, ‘none’, 0, [1 (numel(marker) + 1)]) 
\end_layout

\begin_layout Subsubsection*
Multiple file reference tests
\end_layout

\begin_layout Standard
Function name: multiple_files(testCase) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Description: The input variable datafile is either a cell array of two filenames
 or a cell array of two stucts.
 In both cases it is tested whether the return value is also a cell array
 of two filenames and whether both files are trimmed correctly.
 
\end_layout

\begin_layout Subsubsection*
Options tests
\end_layout

\begin_layout Subsubsection*
Marker channel number option
\end_layout

\begin_layout Standard
Function name: marker_chan_num_option_test(testCase) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Description: Tests if the option marker_chan_num is working correctly.
 There are two tests: Test 1: Checks for a warning if the selected channel
 is no marker channel.
 Test 2: Checks if the selected channel is actually used.
 
\end_layout

\begin_layout Subsection
Testcases: pspm_write_channel
\end_layout

\begin_layout Subsubsection
Information
\end_layout

\begin_layout Standard
Testclass: pspm_write_channel_test 
\begin_inset Newline newline
\end_inset

Function: [sts] = pspm_write_channel(fn, newdata, action, options)
\end_layout

\begin_layout Subsubsection
Setup
\end_layout

\begin_layout Subsubsection*
Testdatafile
\end_layout

\begin_layout Standard
The testdatafile is a class property.
 It is generated by the function generate_testdatafile() once the test class
 is setup.
 Changes made by a test to the testdatafile won't be reverted.
 Thus some test functions rely on the changes made by another test function.
 Therefore the functions may not work properly if called individually.
\end_layout

\begin_layout Paragraph*
Structure (created with generate_testdatafile())
\end_layout

\begin_layout Standard

\family typewriter
data{1}.chantype = 'scr'; 
\begin_inset Newline newline
\end_inset

data{2}.chantype = 'marker';
\begin_inset Newline newline
\end_inset

data{3}.chantype = 'scr'; 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\family default
The sampling rate is 100 Hz and the duration is 500s.
\end_layout

\begin_layout Subsubsection
Testcases
\end_layout

\begin_layout Subsubsection*
Invalid input
\end_layout

\begin_layout Standard
Function name: invalid_input(this) 
\begin_inset Newline newline
\end_inset

Description: Checks for warnings, if the input arguments are invalid.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="6cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expected warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_write_channel() [no parameter]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_write_channel(1) [fn is a number]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_write_channel('some_file', []) [no action passed]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:unknown_action
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_write_channel('some_file', [], '') [empty action passed]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:unknown_action
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.channel = 'some invalid channel'
\end_layout

\begin_layout Plain Layout
pspm_write_channel('some_file', [], 'add', options) [invalid channel]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.channel = -1
\end_layout

\begin_layout Plain Layout
pspm_write_channel('some_file', [], 'add', options) [negative channel]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.channel = 0
\end_layout

\begin_layout Plain Layout
pspm_write_channel('some_file', [], 'delete', options) [no channel and no
 data given]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.channel = 0
\end_layout

\begin_layout Plain Layout
pspm_write_channel('some_file', [], 'add', options) [empty newdata]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.channel = 0
\end_layout

\begin_layout Plain Layout
pspm_write_channel('some_file', 1:3, 'add', options) [newdata is not cell
 and not struct]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.channel = 1:5
\end_layout

\begin_layout Plain Layout
pspm_write_channel(this.testdatafile, [], 'delete', options) [more given
 channels than in file exist]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
options.channel = 'ecg'; pspm_write_channel(this.testdatafile, [], 'delete',
 options)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:no_matching_channels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_write_channel(this.testdatafile, gen_data.data{1}, 'add') [generated
 data has the wrong format (two rows in one channel)]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID:invalid_data_structure
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Action 'add'
\end_layout

\begin_layout Standard
Function name: test_add(this) 
\begin_inset Newline newline
\end_inset

Description: Checks if action 'add' behaves as expected.
 A new channel with chantype = 'hb', sr = 200 and duration = 500 is generated.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Load condition before and after and pass it to 'Verify write'
\end_layout

\begin_layout Subsubsection*
Action 'add transposed'
\end_layout

\begin_layout Standard
Function name: test_add_transposed(this) 
\begin_inset Newline newline
\end_inset

Description: Checks if action 'add' behaves as expected, when data has the
 wrong dimensions.
 A new channel with chantype = 'rs', sr = 200 and duration = 500 is generated.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Transpose generated data
\end_layout

\begin_layout Enumerate
Load condition before and after and pass it to 'Verify write'
\end_layout

\begin_layout Subsubsection*
Action 'replace'/'add'
\end_layout

\begin_layout Standard
Function name: test_replace_add(this) 
\begin_inset Newline newline
\end_inset

Description: Checks if action 'replace' behaves as expected.
 A new channel with chantype = 'hr', sr = 10 and duration = 500 is generated.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Running pspm_write_channel with action = 'replace' should issue 'ID:no_matching_
channels' (channeltype should not exist before) and then instead add the
 channel
\end_layout

\begin_layout Enumerate
Load condition before and after and pass it to 'Verify write'
\end_layout

\begin_layout Subsubsection*
Action 'replace'
\end_layout

\begin_layout Standard
Function name: test_replace(this) 
\begin_inset Newline newline
\end_inset

Description: Checks if action 'replace' behaves as expected.
 A new channel with chantype = 'hr', sr = 20 and duration = 500 is generated.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
Load condition before and after and pass it to 'Verify write'
\end_layout

\begin_layout Enumerate
Test if 'hr' channel has sample rate 20
\end_layout

\begin_layout Subsubsection*
Action 'delete' (one channel)
\end_layout

\begin_layout Standard
Function name: test_delete_single(this) 
\begin_inset Newline newline
\end_inset

Description: Checks if action 'delete' behaves as expected.
 In this test only one channel will be deleted.
 To test the delete algorithm there will be 7 channels added which are then
 also used for test_delete_multi(this).
 The particular channels are then identified by the sample rate which correspond
s to the channel id * 10.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Delete channel with chantype = 'hr' in newdata.header.chantype
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Verify write
\end_layout

\begin_layout Enumerate
Ensure only one channel has been deleted
\end_layout

\begin_layout Enumerate
Test if there is no more channel with chantype = 'hr'
\end_layout

\end_deeper
\begin_layout Enumerate
Delete channel with channel number in options.channel
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Verify Write
\end_layout

\begin_layout Enumerate
Ensure only one channel has been deleted
\end_layout

\end_deeper
\begin_layout Enumerate
Test the delete algorithm
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Remove 'resp' channel with options.delete = 'last'
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Verify write
\end_layout

\begin_layout Enumerate
Ensure only one channel has been deleted
\end_layout

\begin_layout Enumerate
Test if last channel was deleted 
\end_layout

\end_deeper
\begin_layout Enumerate
Remove 'resp' channel with options.delete = 'first'
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Verify write
\end_layout

\begin_layout Enumerate
Ensure only one channel has been deleted
\end_layout

\begin_layout Enumerate
Test if last entry was not deleted
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection*
Action 'delete' (multiple channels)
\end_layout

\begin_layout Standard
Function name: test_delete_multi(this) 
\begin_inset Newline newline
\end_inset

Description: Checks if action 'delete' behaves as expected.
 In this test only multiple channels will be deleted.
 This test relys on the changes made to the testdatafile by other test functions
 in this class.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Tests:
\end_layout

\begin_layout Enumerate
Delete channel 1 and 2 from testdatafile
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Verify write
\end_layout

\begin_layout Enumerate
Ensure two channels have been deleted
\end_layout

\end_deeper
\begin_layout Enumerate
Delete all 'resp' channels from testdatafile
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Verify write
\end_layout

\begin_layout Enumerate
Test if datafile contains no more 'resp' channels
\end_layout

\end_deeper
\begin_layout Subsubsection
Other methods
\end_layout

\begin_layout Subsubsection*
Verify write
\end_layout

\begin_layout Standard
Is called after pspm_write_channel has been called (action = 'add' or action
 = 'replace') and tests if data was written and a new history entry was
 made.
 
\begin_inset Newline newline
\end_inset

Tests: 
\end_layout

\begin_layout Enumerate
if action = 'add', test if there is a new channel
\end_layout

\begin_layout Enumerate
if action = 'replace', test if there is still the same amount of channels
\end_layout

\begin_layout Enumerate
if action = 'delete', test if there have been as many channels deleted as
 given in outinfos.channel
\end_layout

\begin_layout Enumerate
test if history has a new entry
\end_layout

\begin_layout Enumerate
search for channels with same chantype as added channel (should be only
 one channel)
\end_layout

\begin_layout Enumerate
test if number of data elements in new channel and added channel is equal
\end_layout

\begin_layout Enumerate
test if new channel and added channel have same 'sr'
\end_layout

\begin_layout Section
External functions and tools
\end_layout

\begin_layout Subsection
VB (Variational Bayes) inversion algorithm by Jean Daunizeau
\end_layout

\begin_layout Standard
Updated October 2014
\end_layout

\begin_layout Standard
Changes made for use in PsPM: 
\end_layout

\begin_layout Itemize

\emph on
VBA_ReDisplay.m
\emph default
, fixed try-catch syntax in various places by adding a comma after 
\begin_inset Quotes eld
\end_inset

try
\begin_inset Quotes erd
\end_inset

 to avoid warning in matlab > 2007
\end_layout

\begin_layout Itemize

\shape italic
VBA_inv.m
\shape default
, line 42: added warning off/on to suppress the warning 
\begin_inset Quotes eld
\end_inset

Matrix is singular, close to singular or badly scaled.
 Results may be inaccurate.
 RCOND = NaN.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Updated October 2016
\end_layout

\begin_layout Standard
Changes made for use in PsPM: 
\end_layout

\begin_layout Itemize

\emph on
VBA_ReDisplay.m
\emph default
, fixed try-catch syntax in various places by adding a comma after 
\begin_inset Quotes eld
\end_inset

try
\begin_inset Quotes erd
\end_inset

 to avoid warning in matlab > 2007
\end_layout

\begin_layout Itemize

\shape italic
VBA_inv.m
\shape default
, line 48: added warning off/on to suppress the warning 
\begin_inset Quotes eld
\end_inset

Matrix is singular, close to singular or badly scaled.
 Results may be inaccurate.
 RCOND = NaN.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize

\shape italic
VBA_NLStateSpaceModel.m
\shape default
: added resetting warning to preceeding state.
\end_layout

\begin_layout Section
List of functions
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="156" columns="4">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="4cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Main author
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test exists
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test Doc
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
f_SCR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach & Jean Daunizeau
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
f_SF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
g_SCR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
scr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_align_channels
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_axpos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_brf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Saurabh Khemka & Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_FIR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_Fourier
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_hprf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_hprf_e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_hprf_fc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_hprf_fc_f
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_lcrf_gm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_ldrf_gm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_ldrf_gu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_psrf_fc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_rarf_e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_rarf_fc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_rfrrf_e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_rprf_e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_scrf_f
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_scrf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_spsrf_box
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laure Ciernik
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_bf_spsrf_gamma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laure Ciernik
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_butter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_compute_visual_angle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laure Ciernik
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_con1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_con2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_contrast
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_convert_area2diameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_convert_au2mm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_convert_illum2lum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_convert_lux2cdm2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_convert_mm2visdeg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_convert_pixel2unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laure Ciernik
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_convert_unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_convert_visangle2sps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laure Ciernik
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_data_editor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_dcm_inv
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_dcm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_denoise_spike
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_display
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Philipp C Paulus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_down
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_downsample
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ecg2hb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Philipp C Paulus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ecg2hb_amri
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ecg_editor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_exp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_extract_segments
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_filtfilt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_channel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_data_epochs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_sounds
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Samuel Gerster
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_find_valid_fixations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_acq_bioread
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_acq
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_acqmat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_biograph
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_biosemi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_biotrace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_blink_l
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_blink_r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_brainvis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_cell
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_cnt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_custom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_ecg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_edf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_events
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_eyelink
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Christoph Korn, Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_gaze_x_l
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_gaze_y_l
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_gaze_x_r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_gaze_y_r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_hb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_hp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_hr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_labchartmat_ext
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_labchartmat_in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_marker
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_markerinfo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_mat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_obs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linus Rüttimann
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_physlog
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_pupil
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_pupil_l
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_pupil_r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_resp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_rf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_saccade_l
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laure Ciernik
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_saccade_r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laure Ciernik
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_scr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_smi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_sps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laure Ciernik
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_spike
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_sound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_timing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_txt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_vario
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_viewpoint
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_wdq
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_get_wdq_n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm_recon
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_glm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_hb2hr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_import
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_init
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_interpolate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_jobman
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gabriel Gräni
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_job_create
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_load_single_chan
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_merge
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_path
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_peakscore
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ppu2hb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Samuel Gerster
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_predval
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_prepdata
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_process_illuminance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pulse_convert
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pupil_correct_eyelink
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pupil_correct
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pupil_pp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_pupil_pp_options
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_quit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_ren
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_resp_pp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_rev_con
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_rev_dcm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_rev_glm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_rev2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_review
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gabriel Graeni
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_segment_mean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_scr_pp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dadi Zhao
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_sf_auc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_sf_dcm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_sf_mp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_sf_scl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_sf_theta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_sf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_sf_get_theta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_show_arms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_spike_convert
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_split_sessions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linus Rüttimann
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_transfer_function
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_time2index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dadi Zhao
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_trim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dominik Bach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pspm_write_channel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tobias Moser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
set_blinks_saccades_to_nan
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eshref Yozdemir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_body
\end_document
